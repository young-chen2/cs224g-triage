{"ast":null,"code":"export function addErrorMessage(res, key, errorMessage, refs) {\n  if (!refs?.errorMessages) return;\n  if (errorMessage) {\n    res.errorMessage = {\n      ...res.errorMessage,\n      [key]: errorMessage\n    };\n  }\n}\nexport function setResponseValueAndErrors(res, key, value, errorMessage, refs) {\n  res[key] = value;\n  addErrorMessage(res, key, errorMessage, refs);\n}","map":{"version":3,"names":["addErrorMessage","res","key","errorMessage","refs","errorMessages","setResponseValueAndErrors","value"],"sources":["/Users/youngchen/Downloads/cs224g-triage/node_modules/openai/src/_vendor/zod-to-json-schema/errorMessages.ts"],"sourcesContent":["import { JsonSchema7TypeUnion } from './parseDef';\nimport { Refs } from './Refs';\n\nexport type ErrorMessages<T extends JsonSchema7TypeUnion, OmitProperties extends string = ''> = Partial<\n  Omit<{ [key in keyof T]: string }, OmitProperties | 'type' | 'errorMessages'>\n>;\n\nexport function addErrorMessage<T extends { errorMessage?: ErrorMessages<any> }>(\n  res: T,\n  key: keyof T,\n  errorMessage: string | undefined,\n  refs: Refs,\n) {\n  if (!refs?.errorMessages) return;\n  if (errorMessage) {\n    res.errorMessage = {\n      ...res.errorMessage,\n      [key]: errorMessage,\n    };\n  }\n}\n\nexport function setResponseValueAndErrors<\n  Json7Type extends JsonSchema7TypeUnion & {\n    errorMessage?: ErrorMessages<Json7Type>;\n  },\n  Key extends keyof Omit<Json7Type, 'errorMessage'>,\n>(res: Json7Type, key: Key, value: Json7Type[Key], errorMessage: string | undefined, refs: Refs) {\n  res[key] = value;\n  addErrorMessage(res, key, errorMessage, refs);\n}\n"],"mappings":"AAOA,OAAM,SAAUA,eAAeA,CAC7BC,GAAM,EACNC,GAAY,EACZC,YAAgC,EAChCC,IAAU;EAEV,IAAI,CAACA,IAAI,EAAEC,aAAa,EAAE;EAC1B,IAAIF,YAAY,EAAE;IAChBF,GAAG,CAACE,YAAY,GAAG;MACjB,GAAGF,GAAG,CAACE,YAAY;MACnB,CAACD,GAAG,GAAGC;KACR;;AAEL;AAEA,OAAM,SAAUG,yBAAyBA,CAKvCL,GAAc,EAAEC,GAAQ,EAAEK,KAAqB,EAAEJ,YAAgC,EAAEC,IAAU;EAC7FH,GAAG,CAACC,GAAG,CAAC,GAAGK,KAAK;EAChBP,eAAe,CAACC,GAAG,EAAEC,GAAG,EAAEC,YAAY,EAAEC,IAAI,CAAC;AAC/C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}