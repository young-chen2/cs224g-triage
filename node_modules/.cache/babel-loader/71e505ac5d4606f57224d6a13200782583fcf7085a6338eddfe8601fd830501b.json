{"ast":null,"code":"import { LLMChain } from \"../llm_chain.js\";\nimport { StuffDocumentsChain, MapReduceDocumentsChain, RefineDocumentsChain } from \"../combine_docs_chain.js\";\nimport { DEFAULT_PROMPT } from \"./stuff_prompts.js\";\nimport { REFINE_PROMPT } from \"./refine_prompts.js\";\nexport const loadSummarizationChain = (llm, params = {\n  type: \"map_reduce\"\n}) => {\n  const {\n    verbose\n  } = params;\n  if (params.type === \"stuff\") {\n    const {\n      prompt = DEFAULT_PROMPT\n    } = params;\n    const llmChain = new LLMChain({\n      prompt,\n      llm,\n      verbose\n    });\n    const chain = new StuffDocumentsChain({\n      llmChain,\n      documentVariableName: \"text\",\n      verbose\n    });\n    return chain;\n  }\n  if (params.type === \"map_reduce\") {\n    const {\n      combineMapPrompt = DEFAULT_PROMPT,\n      combinePrompt = DEFAULT_PROMPT,\n      combineLLM,\n      returnIntermediateSteps\n    } = params;\n    const llmChain = new LLMChain({\n      prompt: combineMapPrompt,\n      llm,\n      verbose\n    });\n    const combineLLMChain = new LLMChain({\n      prompt: combinePrompt,\n      llm: combineLLM ?? llm,\n      verbose\n    });\n    const combineDocumentChain = new StuffDocumentsChain({\n      llmChain: combineLLMChain,\n      documentVariableName: \"text\",\n      verbose\n    });\n    const chain = new MapReduceDocumentsChain({\n      llmChain,\n      combineDocumentChain,\n      documentVariableName: \"text\",\n      returnIntermediateSteps,\n      verbose\n    });\n    return chain;\n  }\n  if (params.type === \"refine\") {\n    const {\n      refinePrompt = REFINE_PROMPT,\n      refineLLM,\n      questionPrompt = DEFAULT_PROMPT\n    } = params;\n    const llmChain = new LLMChain({\n      prompt: questionPrompt,\n      llm,\n      verbose\n    });\n    const refineLLMChain = new LLMChain({\n      prompt: refinePrompt,\n      llm: refineLLM ?? llm,\n      verbose\n    });\n    const chain = new RefineDocumentsChain({\n      llmChain,\n      refineLLMChain,\n      documentVariableName: \"text\",\n      verbose\n    });\n    return chain;\n  }\n  throw new Error(`Invalid _type: ${params.type}`);\n};","map":{"version":3,"names":["LLMChain","StuffDocumentsChain","MapReduceDocumentsChain","RefineDocumentsChain","DEFAULT_PROMPT","REFINE_PROMPT","loadSummarizationChain","llm","params","type","verbose","prompt","llmChain","chain","documentVariableName","combineMapPrompt","combinePrompt","combineLLM","returnIntermediateSteps","combineLLMChain","combineDocumentChain","refinePrompt","refineLLM","questionPrompt","refineLLMChain","Error"],"sources":["/Users/youngchen/Downloads/cs224g-triage/node_modules/langchain/dist/chains/summarization/load.js"],"sourcesContent":["import { LLMChain } from \"../llm_chain.js\";\nimport { StuffDocumentsChain, MapReduceDocumentsChain, RefineDocumentsChain, } from \"../combine_docs_chain.js\";\nimport { DEFAULT_PROMPT } from \"./stuff_prompts.js\";\nimport { REFINE_PROMPT } from \"./refine_prompts.js\";\nexport const loadSummarizationChain = (llm, params = { type: \"map_reduce\" }) => {\n    const { verbose } = params;\n    if (params.type === \"stuff\") {\n        const { prompt = DEFAULT_PROMPT } = params;\n        const llmChain = new LLMChain({ prompt, llm, verbose });\n        const chain = new StuffDocumentsChain({\n            llmChain,\n            documentVariableName: \"text\",\n            verbose,\n        });\n        return chain;\n    }\n    if (params.type === \"map_reduce\") {\n        const { combineMapPrompt = DEFAULT_PROMPT, combinePrompt = DEFAULT_PROMPT, combineLLM, returnIntermediateSteps, } = params;\n        const llmChain = new LLMChain({ prompt: combineMapPrompt, llm, verbose });\n        const combineLLMChain = new LLMChain({\n            prompt: combinePrompt,\n            llm: combineLLM ?? llm,\n            verbose,\n        });\n        const combineDocumentChain = new StuffDocumentsChain({\n            llmChain: combineLLMChain,\n            documentVariableName: \"text\",\n            verbose,\n        });\n        const chain = new MapReduceDocumentsChain({\n            llmChain,\n            combineDocumentChain,\n            documentVariableName: \"text\",\n            returnIntermediateSteps,\n            verbose,\n        });\n        return chain;\n    }\n    if (params.type === \"refine\") {\n        const { refinePrompt = REFINE_PROMPT, refineLLM, questionPrompt = DEFAULT_PROMPT, } = params;\n        const llmChain = new LLMChain({ prompt: questionPrompt, llm, verbose });\n        const refineLLMChain = new LLMChain({\n            prompt: refinePrompt,\n            llm: refineLLM ?? llm,\n            verbose,\n        });\n        const chain = new RefineDocumentsChain({\n            llmChain,\n            refineLLMChain,\n            documentVariableName: \"text\",\n            verbose,\n        });\n        return chain;\n    }\n    throw new Error(`Invalid _type: ${params.type}`);\n};\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,iBAAiB;AAC1C,SAASC,mBAAmB,EAAEC,uBAAuB,EAAEC,oBAAoB,QAAS,0BAA0B;AAC9G,SAASC,cAAc,QAAQ,oBAAoB;AACnD,SAASC,aAAa,QAAQ,qBAAqB;AACnD,OAAO,MAAMC,sBAAsB,GAAGA,CAACC,GAAG,EAAEC,MAAM,GAAG;EAAEC,IAAI,EAAE;AAAa,CAAC,KAAK;EAC5E,MAAM;IAAEC;EAAQ,CAAC,GAAGF,MAAM;EAC1B,IAAIA,MAAM,CAACC,IAAI,KAAK,OAAO,EAAE;IACzB,MAAM;MAAEE,MAAM,GAAGP;IAAe,CAAC,GAAGI,MAAM;IAC1C,MAAMI,QAAQ,GAAG,IAAIZ,QAAQ,CAAC;MAAEW,MAAM;MAAEJ,GAAG;MAAEG;IAAQ,CAAC,CAAC;IACvD,MAAMG,KAAK,GAAG,IAAIZ,mBAAmB,CAAC;MAClCW,QAAQ;MACRE,oBAAoB,EAAE,MAAM;MAC5BJ;IACJ,CAAC,CAAC;IACF,OAAOG,KAAK;EAChB;EACA,IAAIL,MAAM,CAACC,IAAI,KAAK,YAAY,EAAE;IAC9B,MAAM;MAAEM,gBAAgB,GAAGX,cAAc;MAAEY,aAAa,GAAGZ,cAAc;MAAEa,UAAU;MAAEC;IAAyB,CAAC,GAAGV,MAAM;IAC1H,MAAMI,QAAQ,GAAG,IAAIZ,QAAQ,CAAC;MAAEW,MAAM,EAAEI,gBAAgB;MAAER,GAAG;MAAEG;IAAQ,CAAC,CAAC;IACzE,MAAMS,eAAe,GAAG,IAAInB,QAAQ,CAAC;MACjCW,MAAM,EAAEK,aAAa;MACrBT,GAAG,EAAEU,UAAU,IAAIV,GAAG;MACtBG;IACJ,CAAC,CAAC;IACF,MAAMU,oBAAoB,GAAG,IAAInB,mBAAmB,CAAC;MACjDW,QAAQ,EAAEO,eAAe;MACzBL,oBAAoB,EAAE,MAAM;MAC5BJ;IACJ,CAAC,CAAC;IACF,MAAMG,KAAK,GAAG,IAAIX,uBAAuB,CAAC;MACtCU,QAAQ;MACRQ,oBAAoB;MACpBN,oBAAoB,EAAE,MAAM;MAC5BI,uBAAuB;MACvBR;IACJ,CAAC,CAAC;IACF,OAAOG,KAAK;EAChB;EACA,IAAIL,MAAM,CAACC,IAAI,KAAK,QAAQ,EAAE;IAC1B,MAAM;MAAEY,YAAY,GAAGhB,aAAa;MAAEiB,SAAS;MAAEC,cAAc,GAAGnB;IAAgB,CAAC,GAAGI,MAAM;IAC5F,MAAMI,QAAQ,GAAG,IAAIZ,QAAQ,CAAC;MAAEW,MAAM,EAAEY,cAAc;MAAEhB,GAAG;MAAEG;IAAQ,CAAC,CAAC;IACvE,MAAMc,cAAc,GAAG,IAAIxB,QAAQ,CAAC;MAChCW,MAAM,EAAEU,YAAY;MACpBd,GAAG,EAAEe,SAAS,IAAIf,GAAG;MACrBG;IACJ,CAAC,CAAC;IACF,MAAMG,KAAK,GAAG,IAAIV,oBAAoB,CAAC;MACnCS,QAAQ;MACRY,cAAc;MACdV,oBAAoB,EAAE,MAAM;MAC5BJ;IACJ,CAAC,CAAC;IACF,OAAOG,KAAK;EAChB;EACA,MAAM,IAAIY,KAAK,CAAC,kBAAkBjB,MAAM,CAACC,IAAI,EAAE,CAAC;AACpD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}