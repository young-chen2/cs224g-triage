{"ast":null,"code":"export const isBrowser = () => typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\nexport const isWebWorker = () => typeof globalThis === \"object\" && globalThis.constructor && globalThis.constructor.name === \"DedicatedWorkerGlobalScope\";\nexport const isJsDom = () => typeof window !== \"undefined\" && window.name === \"nodejs\" || typeof navigator !== \"undefined\" && (navigator.userAgent.includes(\"Node.js\") || navigator.userAgent.includes(\"jsdom\"));\n// Supabase Edge Function provides a `Deno` global object\n// without `version` property\nexport const isDeno = () => typeof Deno !== \"undefined\";\n// Mark not-as-node if in Supabase Edge Function\nexport const isNode = () => typeof process !== \"undefined\" && typeof process.versions !== \"undefined\" && typeof process.versions.node !== \"undefined\" && !isDeno();\nexport const getEnv = () => {\n  let env;\n  if (isBrowser()) {\n    env = \"browser\";\n  } else if (isNode()) {\n    env = \"node\";\n  } else if (isWebWorker()) {\n    env = \"webworker\";\n  } else if (isJsDom()) {\n    env = \"jsdom\";\n  } else if (isDeno()) {\n    env = \"deno\";\n  } else {\n    env = \"other\";\n  }\n  return env;\n};\nlet runtimeEnvironment;\nexport async function getRuntimeEnvironment() {\n  if (runtimeEnvironment === undefined) {\n    const env = getEnv();\n    runtimeEnvironment = {\n      library: \"langchain-js\",\n      runtime: env\n    };\n  }\n  return runtimeEnvironment;\n}\nexport function getEnvironmentVariable(name) {\n  // Certain Deno setups will throw an error if you try to access environment variables\n  // https://github.com/langchain-ai/langchainjs/issues/1412\n  try {\n    if (typeof process !== \"undefined\") {\n      // eslint-disable-next-line no-process-env\n      return process.env?.[name];\n    } else if (isDeno()) {\n      return Deno?.env.get(name);\n    } else {\n      return undefined;\n    }\n  } catch (e) {\n    return undefined;\n  }\n}","map":{"version":3,"names":["isBrowser","window","document","isWebWorker","globalThis","constructor","name","isJsDom","navigator","userAgent","includes","isDeno","Deno","isNode","process","versions","node","getEnv","env","runtimeEnvironment","getRuntimeEnvironment","undefined","library","runtime","getEnvironmentVariable","get","e"],"sources":["/Users/youngchen/Downloads/cs224g-triage/node_modules/@langchain/core/dist/utils/env.js"],"sourcesContent":["export const isBrowser = () => typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\nexport const isWebWorker = () => typeof globalThis === \"object\" &&\n    globalThis.constructor &&\n    globalThis.constructor.name === \"DedicatedWorkerGlobalScope\";\nexport const isJsDom = () => (typeof window !== \"undefined\" && window.name === \"nodejs\") ||\n    (typeof navigator !== \"undefined\" &&\n        (navigator.userAgent.includes(\"Node.js\") ||\n            navigator.userAgent.includes(\"jsdom\")));\n// Supabase Edge Function provides a `Deno` global object\n// without `version` property\nexport const isDeno = () => typeof Deno !== \"undefined\";\n// Mark not-as-node if in Supabase Edge Function\nexport const isNode = () => typeof process !== \"undefined\" &&\n    typeof process.versions !== \"undefined\" &&\n    typeof process.versions.node !== \"undefined\" &&\n    !isDeno();\nexport const getEnv = () => {\n    let env;\n    if (isBrowser()) {\n        env = \"browser\";\n    }\n    else if (isNode()) {\n        env = \"node\";\n    }\n    else if (isWebWorker()) {\n        env = \"webworker\";\n    }\n    else if (isJsDom()) {\n        env = \"jsdom\";\n    }\n    else if (isDeno()) {\n        env = \"deno\";\n    }\n    else {\n        env = \"other\";\n    }\n    return env;\n};\nlet runtimeEnvironment;\nexport async function getRuntimeEnvironment() {\n    if (runtimeEnvironment === undefined) {\n        const env = getEnv();\n        runtimeEnvironment = {\n            library: \"langchain-js\",\n            runtime: env,\n        };\n    }\n    return runtimeEnvironment;\n}\nexport function getEnvironmentVariable(name) {\n    // Certain Deno setups will throw an error if you try to access environment variables\n    // https://github.com/langchain-ai/langchainjs/issues/1412\n    try {\n        if (typeof process !== \"undefined\") {\n            // eslint-disable-next-line no-process-env\n            return process.env?.[name];\n        }\n        else if (isDeno()) {\n            return Deno?.env.get(name);\n        }\n        else {\n            return undefined;\n        }\n    }\n    catch (e) {\n        return undefined;\n    }\n}\n"],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAGA,CAAA,KAAM,OAAOC,MAAM,KAAK,WAAW,IAAI,OAAOA,MAAM,CAACC,QAAQ,KAAK,WAAW;AACtG,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM,OAAOC,UAAU,KAAK,QAAQ,IAC3DA,UAAU,CAACC,WAAW,IACtBD,UAAU,CAACC,WAAW,CAACC,IAAI,KAAK,4BAA4B;AAChE,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAO,OAAON,MAAM,KAAK,WAAW,IAAIA,MAAM,CAACK,IAAI,KAAK,QAAQ,IAClF,OAAOE,SAAS,KAAK,WAAW,KAC5BA,SAAS,CAACC,SAAS,CAACC,QAAQ,CAAC,SAAS,CAAC,IACpCF,SAAS,CAACC,SAAS,CAACC,QAAQ,CAAC,OAAO,CAAC,CAAE;AACnD;AACA;AACA,OAAO,MAAMC,MAAM,GAAGA,CAAA,KAAM,OAAOC,IAAI,KAAK,WAAW;AACvD;AACA,OAAO,MAAMC,MAAM,GAAGA,CAAA,KAAM,OAAOC,OAAO,KAAK,WAAW,IACtD,OAAOA,OAAO,CAACC,QAAQ,KAAK,WAAW,IACvC,OAAOD,OAAO,CAACC,QAAQ,CAACC,IAAI,KAAK,WAAW,IAC5C,CAACL,MAAM,CAAC,CAAC;AACb,OAAO,MAAMM,MAAM,GAAGA,CAAA,KAAM;EACxB,IAAIC,GAAG;EACP,IAAIlB,SAAS,CAAC,CAAC,EAAE;IACbkB,GAAG,GAAG,SAAS;EACnB,CAAC,MACI,IAAIL,MAAM,CAAC,CAAC,EAAE;IACfK,GAAG,GAAG,MAAM;EAChB,CAAC,MACI,IAAIf,WAAW,CAAC,CAAC,EAAE;IACpBe,GAAG,GAAG,WAAW;EACrB,CAAC,MACI,IAAIX,OAAO,CAAC,CAAC,EAAE;IAChBW,GAAG,GAAG,OAAO;EACjB,CAAC,MACI,IAAIP,MAAM,CAAC,CAAC,EAAE;IACfO,GAAG,GAAG,MAAM;EAChB,CAAC,MACI;IACDA,GAAG,GAAG,OAAO;EACjB;EACA,OAAOA,GAAG;AACd,CAAC;AACD,IAAIC,kBAAkB;AACtB,OAAO,eAAeC,qBAAqBA,CAAA,EAAG;EAC1C,IAAID,kBAAkB,KAAKE,SAAS,EAAE;IAClC,MAAMH,GAAG,GAAGD,MAAM,CAAC,CAAC;IACpBE,kBAAkB,GAAG;MACjBG,OAAO,EAAE,cAAc;MACvBC,OAAO,EAAEL;IACb,CAAC;EACL;EACA,OAAOC,kBAAkB;AAC7B;AACA,OAAO,SAASK,sBAAsBA,CAAClB,IAAI,EAAE;EACzC;EACA;EACA,IAAI;IACA,IAAI,OAAOQ,OAAO,KAAK,WAAW,EAAE;MAChC;MACA,OAAOA,OAAO,CAACI,GAAG,GAAGZ,IAAI,CAAC;IAC9B,CAAC,MACI,IAAIK,MAAM,CAAC,CAAC,EAAE;MACf,OAAOC,IAAI,EAAEM,GAAG,CAACO,GAAG,CAACnB,IAAI,CAAC;IAC9B,CAAC,MACI;MACD,OAAOe,SAAS;IACpB;EACJ,CAAC,CACD,OAAOK,CAAC,EAAE;IACN,OAAOL,SAAS;EACpB;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}