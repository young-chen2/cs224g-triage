{"ast":null,"code":"import { BaseChain } from \"../../chains/base.js\";\n/**\n * A class that represents a router chain. It\n * extends the BaseChain class and provides functionality for routing\n * inputs to different chains.\n */\nexport class RouterChain extends BaseChain {\n  get outputKeys() {\n    return [\"destination\", \"next_inputs\"];\n  }\n  async route(inputs, callbacks) {\n    const result = await this.call(inputs, callbacks);\n    return {\n      destination: result.destination,\n      nextInputs: result.next_inputs\n    };\n  }\n}\n/**\n * A class that represents a multi-route chain.\n * It extends the BaseChain class and provides functionality for routing\n * inputs to different chains based on a router chain.\n */\nexport class MultiRouteChain extends BaseChain {\n  static lc_name() {\n    return \"MultiRouteChain\";\n  }\n  constructor(fields) {\n    super(fields);\n    Object.defineProperty(this, \"routerChain\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"destinationChains\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"defaultChain\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"silentErrors\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    this.routerChain = fields.routerChain;\n    this.destinationChains = fields.destinationChains;\n    this.defaultChain = fields.defaultChain;\n    this.silentErrors = fields.silentErrors ?? this.silentErrors;\n  }\n  get inputKeys() {\n    return this.routerChain.inputKeys;\n  }\n  get outputKeys() {\n    return [];\n  }\n  async _call(values, runManager) {\n    const {\n      destination,\n      nextInputs\n    } = await this.routerChain.route(values, runManager?.getChild());\n    await runManager?.handleText(`${destination}: ${JSON.stringify(nextInputs)}`);\n    if (!destination) {\n      return this.defaultChain.call(nextInputs, runManager?.getChild()).catch(err => {\n        throw new Error(`Error in default chain: ${err}`);\n      });\n    }\n    if (destination in this.destinationChains) {\n      return this.destinationChains[destination].call(nextInputs, runManager?.getChild()).catch(err => {\n        throw new Error(`Error in ${destination} chain: ${err}`);\n      });\n    }\n    if (this.silentErrors) {\n      return this.defaultChain.call(nextInputs, runManager?.getChild()).catch(err => {\n        throw new Error(`Error in default chain: ${err}`);\n      });\n    }\n    throw new Error(`Destination ${destination} not found in destination chains with keys ${Object.keys(this.destinationChains)}`);\n  }\n  _chainType() {\n    return \"multi_route_chain\";\n  }\n}","map":{"version":3,"names":["BaseChain","RouterChain","outputKeys","route","inputs","callbacks","result","call","destination","nextInputs","next_inputs","MultiRouteChain","lc_name","constructor","fields","Object","defineProperty","enumerable","configurable","writable","value","routerChain","destinationChains","defaultChain","silentErrors","inputKeys","_call","values","runManager","getChild","handleText","JSON","stringify","catch","err","Error","keys","_chainType"],"sources":["/Users/youngchen/Downloads/cs224g-triage/node_modules/langchain/dist/chains/router/multi_route.js"],"sourcesContent":["import { BaseChain } from \"../../chains/base.js\";\n/**\n * A class that represents a router chain. It\n * extends the BaseChain class and provides functionality for routing\n * inputs to different chains.\n */\nexport class RouterChain extends BaseChain {\n    get outputKeys() {\n        return [\"destination\", \"next_inputs\"];\n    }\n    async route(inputs, callbacks) {\n        const result = await this.call(inputs, callbacks);\n        return {\n            destination: result.destination,\n            nextInputs: result.next_inputs,\n        };\n    }\n}\n/**\n * A class that represents a multi-route chain.\n * It extends the BaseChain class and provides functionality for routing\n * inputs to different chains based on a router chain.\n */\nexport class MultiRouteChain extends BaseChain {\n    static lc_name() {\n        return \"MultiRouteChain\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"routerChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"destinationChains\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"defaultChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"silentErrors\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        this.routerChain = fields.routerChain;\n        this.destinationChains = fields.destinationChains;\n        this.defaultChain = fields.defaultChain;\n        this.silentErrors = fields.silentErrors ?? this.silentErrors;\n    }\n    get inputKeys() {\n        return this.routerChain.inputKeys;\n    }\n    get outputKeys() {\n        return [];\n    }\n    async _call(values, runManager) {\n        const { destination, nextInputs } = await this.routerChain.route(values, runManager?.getChild());\n        await runManager?.handleText(`${destination}: ${JSON.stringify(nextInputs)}`);\n        if (!destination) {\n            return this.defaultChain\n                .call(nextInputs, runManager?.getChild())\n                .catch((err) => {\n                throw new Error(`Error in default chain: ${err}`);\n            });\n        }\n        if (destination in this.destinationChains) {\n            return this.destinationChains[destination]\n                .call(nextInputs, runManager?.getChild())\n                .catch((err) => {\n                throw new Error(`Error in ${destination} chain: ${err}`);\n            });\n        }\n        if (this.silentErrors) {\n            return this.defaultChain\n                .call(nextInputs, runManager?.getChild())\n                .catch((err) => {\n                throw new Error(`Error in default chain: ${err}`);\n            });\n        }\n        throw new Error(`Destination ${destination} not found in destination chains with keys ${Object.keys(this.destinationChains)}`);\n    }\n    _chainType() {\n        return \"multi_route_chain\";\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}