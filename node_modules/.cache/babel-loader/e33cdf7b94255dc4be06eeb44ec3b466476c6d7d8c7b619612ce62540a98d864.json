{"ast":null,"code":"import { BaseChain } from \"./base.js\";\nimport { loadQAStuffChain } from \"./question_answering/load.js\";\n/**\n * Class that represents a VectorDBQAChain. It extends the `BaseChain`\n * class and implements the `VectorDBQAChainInput` interface. It performs\n * a similarity search using a vector store and combines the search\n * results using a specified combine documents chain.\n *\n * @deprecated\n * Switch to {@link https://js.langchain.com/docs/modules/chains/ | createRetrievalChain}\n * Will be removed in 0.2.0\n */\nexport class VectorDBQAChain extends BaseChain {\n  static lc_name() {\n    return \"VectorDBQAChain\";\n  }\n  get inputKeys() {\n    return [this.inputKey];\n  }\n  get outputKeys() {\n    return this.combineDocumentsChain.outputKeys.concat(this.returnSourceDocuments ? [\"sourceDocuments\"] : []);\n  }\n  constructor(fields) {\n    super(fields);\n    Object.defineProperty(this, \"k\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 4\n    });\n    Object.defineProperty(this, \"inputKey\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"query\"\n    });\n    Object.defineProperty(this, \"vectorstore\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"combineDocumentsChain\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"returnSourceDocuments\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    this.vectorstore = fields.vectorstore;\n    this.combineDocumentsChain = fields.combineDocumentsChain;\n    this.inputKey = fields.inputKey ?? this.inputKey;\n    this.k = fields.k ?? this.k;\n    this.returnSourceDocuments = fields.returnSourceDocuments ?? this.returnSourceDocuments;\n  }\n  /** @ignore */\n  async _call(values, runManager) {\n    if (!(this.inputKey in values)) {\n      throw new Error(`Question key ${this.inputKey} not found.`);\n    }\n    const question = values[this.inputKey];\n    const docs = await this.vectorstore.similaritySearch(question, this.k, values.filter, runManager?.getChild(\"vectorstore\"));\n    const inputs = {\n      question,\n      input_documents: docs\n    };\n    const result = await this.combineDocumentsChain.call(inputs, runManager?.getChild(\"combine_documents\"));\n    if (this.returnSourceDocuments) {\n      return {\n        ...result,\n        sourceDocuments: docs\n      };\n    }\n    return result;\n  }\n  _chainType() {\n    return \"vector_db_qa\";\n  }\n  static async deserialize(data, values) {\n    if (!(\"vectorstore\" in values)) {\n      throw new Error(`Need to pass in a vectorstore to deserialize VectorDBQAChain`);\n    }\n    const {\n      vectorstore\n    } = values;\n    if (!data.combine_documents_chain) {\n      throw new Error(`VectorDBQAChain must have combine_documents_chain in serialized data`);\n    }\n    return new VectorDBQAChain({\n      combineDocumentsChain: await BaseChain.deserialize(data.combine_documents_chain),\n      k: data.k,\n      vectorstore\n    });\n  }\n  serialize() {\n    return {\n      _type: this._chainType(),\n      combine_documents_chain: this.combineDocumentsChain.serialize(),\n      k: this.k\n    };\n  }\n  /**\n   * Static method that creates a VectorDBQAChain instance from a\n   * BaseLanguageModel and a vector store. It also accepts optional options\n   * to customize the chain.\n   * @param llm The BaseLanguageModel instance.\n   * @param vectorstore The vector store used for similarity search.\n   * @param options Optional options to customize the chain.\n   * @returns A new instance of VectorDBQAChain.\n   */\n  static fromLLM(llm, vectorstore, options) {\n    const qaChain = loadQAStuffChain(llm);\n    return new this({\n      vectorstore,\n      combineDocumentsChain: qaChain,\n      ...options\n    });\n  }\n}","map":{"version":3,"names":["BaseChain","loadQAStuffChain","VectorDBQAChain","lc_name","inputKeys","inputKey","outputKeys","combineDocumentsChain","concat","returnSourceDocuments","constructor","fields","Object","defineProperty","enumerable","configurable","writable","value","vectorstore","k","_call","values","runManager","Error","question","docs","similaritySearch","filter","getChild","inputs","input_documents","result","call","sourceDocuments","_chainType","deserialize","data","combine_documents_chain","serialize","_type","fromLLM","llm","options","qaChain"],"sources":["/Users/youngchen/Downloads/cs224g-triage/node_modules/langchain/dist/chains/vector_db_qa.js"],"sourcesContent":["import { BaseChain } from \"./base.js\";\nimport { loadQAStuffChain } from \"./question_answering/load.js\";\n/**\n * Class that represents a VectorDBQAChain. It extends the `BaseChain`\n * class and implements the `VectorDBQAChainInput` interface. It performs\n * a similarity search using a vector store and combines the search\n * results using a specified combine documents chain.\n *\n * @deprecated\n * Switch to {@link https://js.langchain.com/docs/modules/chains/ | createRetrievalChain}\n * Will be removed in 0.2.0\n */\nexport class VectorDBQAChain extends BaseChain {\n    static lc_name() {\n        return \"VectorDBQAChain\";\n    }\n    get inputKeys() {\n        return [this.inputKey];\n    }\n    get outputKeys() {\n        return this.combineDocumentsChain.outputKeys.concat(this.returnSourceDocuments ? [\"sourceDocuments\"] : []);\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"k\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 4\n        });\n        Object.defineProperty(this, \"inputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"query\"\n        });\n        Object.defineProperty(this, \"vectorstore\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"combineDocumentsChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"returnSourceDocuments\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        this.vectorstore = fields.vectorstore;\n        this.combineDocumentsChain = fields.combineDocumentsChain;\n        this.inputKey = fields.inputKey ?? this.inputKey;\n        this.k = fields.k ?? this.k;\n        this.returnSourceDocuments =\n            fields.returnSourceDocuments ?? this.returnSourceDocuments;\n    }\n    /** @ignore */\n    async _call(values, runManager) {\n        if (!(this.inputKey in values)) {\n            throw new Error(`Question key ${this.inputKey} not found.`);\n        }\n        const question = values[this.inputKey];\n        const docs = await this.vectorstore.similaritySearch(question, this.k, values.filter, runManager?.getChild(\"vectorstore\"));\n        const inputs = { question, input_documents: docs };\n        const result = await this.combineDocumentsChain.call(inputs, runManager?.getChild(\"combine_documents\"));\n        if (this.returnSourceDocuments) {\n            return {\n                ...result,\n                sourceDocuments: docs,\n            };\n        }\n        return result;\n    }\n    _chainType() {\n        return \"vector_db_qa\";\n    }\n    static async deserialize(data, values) {\n        if (!(\"vectorstore\" in values)) {\n            throw new Error(`Need to pass in a vectorstore to deserialize VectorDBQAChain`);\n        }\n        const { vectorstore } = values;\n        if (!data.combine_documents_chain) {\n            throw new Error(`VectorDBQAChain must have combine_documents_chain in serialized data`);\n        }\n        return new VectorDBQAChain({\n            combineDocumentsChain: await BaseChain.deserialize(data.combine_documents_chain),\n            k: data.k,\n            vectorstore,\n        });\n    }\n    serialize() {\n        return {\n            _type: this._chainType(),\n            combine_documents_chain: this.combineDocumentsChain.serialize(),\n            k: this.k,\n        };\n    }\n    /**\n     * Static method that creates a VectorDBQAChain instance from a\n     * BaseLanguageModel and a vector store. It also accepts optional options\n     * to customize the chain.\n     * @param llm The BaseLanguageModel instance.\n     * @param vectorstore The vector store used for similarity search.\n     * @param options Optional options to customize the chain.\n     * @returns A new instance of VectorDBQAChain.\n     */\n    static fromLLM(llm, vectorstore, options) {\n        const qaChain = loadQAStuffChain(llm);\n        return new this({\n            vectorstore,\n            combineDocumentsChain: qaChain,\n            ...options,\n        });\n    }\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,WAAW;AACrC,SAASC,gBAAgB,QAAQ,8BAA8B;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,eAAe,SAASF,SAAS,CAAC;EAC3C,OAAOG,OAAOA,CAAA,EAAG;IACb,OAAO,iBAAiB;EAC5B;EACA,IAAIC,SAASA,CAAA,EAAG;IACZ,OAAO,CAAC,IAAI,CAACC,QAAQ,CAAC;EAC1B;EACA,IAAIC,UAAUA,CAAA,EAAG;IACb,OAAO,IAAI,CAACC,qBAAqB,CAACD,UAAU,CAACE,MAAM,CAAC,IAAI,CAACC,qBAAqB,GAAG,CAAC,iBAAiB,CAAC,GAAG,EAAE,CAAC;EAC9G;EACAC,WAAWA,CAACC,MAAM,EAAE;IAChB,KAAK,CAACA,MAAM,CAAC;IACbC,MAAM,CAACC,cAAc,CAAC,IAAI,EAAE,GAAG,EAAE;MAC7BC,UAAU,EAAE,IAAI;MAChBC,YAAY,EAAE,IAAI;MAClBC,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAE;IACX,CAAC,CAAC;IACFL,MAAM,CAACC,cAAc,CAAC,IAAI,EAAE,UAAU,EAAE;MACpCC,UAAU,EAAE,IAAI;MAChBC,YAAY,EAAE,IAAI;MAClBC,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAE;IACX,CAAC,CAAC;IACFL,MAAM,CAACC,cAAc,CAAC,IAAI,EAAE,aAAa,EAAE;MACvCC,UAAU,EAAE,IAAI;MAChBC,YAAY,EAAE,IAAI;MAClBC,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAE,KAAK;IAChB,CAAC,CAAC;IACFL,MAAM,CAACC,cAAc,CAAC,IAAI,EAAE,uBAAuB,EAAE;MACjDC,UAAU,EAAE,IAAI;MAChBC,YAAY,EAAE,IAAI;MAClBC,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAE,KAAK;IAChB,CAAC,CAAC;IACFL,MAAM,CAACC,cAAc,CAAC,IAAI,EAAE,uBAAuB,EAAE;MACjDC,UAAU,EAAE,IAAI;MAChBC,YAAY,EAAE,IAAI;MAClBC,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAE;IACX,CAAC,CAAC;IACF,IAAI,CAACC,WAAW,GAAGP,MAAM,CAACO,WAAW;IACrC,IAAI,CAACX,qBAAqB,GAAGI,MAAM,CAACJ,qBAAqB;IACzD,IAAI,CAACF,QAAQ,GAAGM,MAAM,CAACN,QAAQ,IAAI,IAAI,CAACA,QAAQ;IAChD,IAAI,CAACc,CAAC,GAAGR,MAAM,CAACQ,CAAC,IAAI,IAAI,CAACA,CAAC;IAC3B,IAAI,CAACV,qBAAqB,GACtBE,MAAM,CAACF,qBAAqB,IAAI,IAAI,CAACA,qBAAqB;EAClE;EACA;EACA,MAAMW,KAAKA,CAACC,MAAM,EAAEC,UAAU,EAAE;IAC5B,IAAI,EAAE,IAAI,CAACjB,QAAQ,IAAIgB,MAAM,CAAC,EAAE;MAC5B,MAAM,IAAIE,KAAK,CAAC,gBAAgB,IAAI,CAAClB,QAAQ,aAAa,CAAC;IAC/D;IACA,MAAMmB,QAAQ,GAAGH,MAAM,CAAC,IAAI,CAAChB,QAAQ,CAAC;IACtC,MAAMoB,IAAI,GAAG,MAAM,IAAI,CAACP,WAAW,CAACQ,gBAAgB,CAACF,QAAQ,EAAE,IAAI,CAACL,CAAC,EAAEE,MAAM,CAACM,MAAM,EAAEL,UAAU,EAAEM,QAAQ,CAAC,aAAa,CAAC,CAAC;IAC1H,MAAMC,MAAM,GAAG;MAAEL,QAAQ;MAAEM,eAAe,EAAEL;IAAK,CAAC;IAClD,MAAMM,MAAM,GAAG,MAAM,IAAI,CAACxB,qBAAqB,CAACyB,IAAI,CAACH,MAAM,EAAEP,UAAU,EAAEM,QAAQ,CAAC,mBAAmB,CAAC,CAAC;IACvG,IAAI,IAAI,CAACnB,qBAAqB,EAAE;MAC5B,OAAO;QACH,GAAGsB,MAAM;QACTE,eAAe,EAAER;MACrB,CAAC;IACL;IACA,OAAOM,MAAM;EACjB;EACAG,UAAUA,CAAA,EAAG;IACT,OAAO,cAAc;EACzB;EACA,aAAaC,WAAWA,CAACC,IAAI,EAAEf,MAAM,EAAE;IACnC,IAAI,EAAE,aAAa,IAAIA,MAAM,CAAC,EAAE;MAC5B,MAAM,IAAIE,KAAK,CAAC,8DAA8D,CAAC;IACnF;IACA,MAAM;MAAEL;IAAY,CAAC,GAAGG,MAAM;IAC9B,IAAI,CAACe,IAAI,CAACC,uBAAuB,EAAE;MAC/B,MAAM,IAAId,KAAK,CAAC,sEAAsE,CAAC;IAC3F;IACA,OAAO,IAAIrB,eAAe,CAAC;MACvBK,qBAAqB,EAAE,MAAMP,SAAS,CAACmC,WAAW,CAACC,IAAI,CAACC,uBAAuB,CAAC;MAChFlB,CAAC,EAAEiB,IAAI,CAACjB,CAAC;MACTD;IACJ,CAAC,CAAC;EACN;EACAoB,SAASA,CAAA,EAAG;IACR,OAAO;MACHC,KAAK,EAAE,IAAI,CAACL,UAAU,CAAC,CAAC;MACxBG,uBAAuB,EAAE,IAAI,CAAC9B,qBAAqB,CAAC+B,SAAS,CAAC,CAAC;MAC/DnB,CAAC,EAAE,IAAI,CAACA;IACZ,CAAC;EACL;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,OAAOqB,OAAOA,CAACC,GAAG,EAAEvB,WAAW,EAAEwB,OAAO,EAAE;IACtC,MAAMC,OAAO,GAAG1C,gBAAgB,CAACwC,GAAG,CAAC;IACrC,OAAO,IAAI,IAAI,CAAC;MACZvB,WAAW;MACXX,qBAAqB,EAAEoC,OAAO;MAC9B,GAAGD;IACP,CAAC,CAAC;EACN;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}