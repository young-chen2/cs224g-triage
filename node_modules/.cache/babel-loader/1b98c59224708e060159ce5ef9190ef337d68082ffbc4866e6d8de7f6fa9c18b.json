{"ast":null,"code":"var _jsxFileName = \"/Users/youngchen/Downloads/cs224g-triage/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useState } from 'react';\nimport OpenAI from 'openai';\nimport { SYSTEM_PROMPT, INITIAL_MESSAGE } from './prompts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new OpenAI({\n  apiKey: process.env.REACT_APP_OPENAI_API_KEY,\n  dangerouslyAllowBrowser: true\n});\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([{\n    role: 'assistant',\n    content: INITIAL_MESSAGE\n  }]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const handleSendMessage = async () => {\n    if (inputMessage.trim() === '') return;\n    setMessages([...messages, {\n      role: 'user',\n      content: inputMessage\n    }]);\n    setInputMessage('');\n    try {\n      const response = await client.chat.completions.create({\n        model: \"gpt-4o-mini\",\n        messages: [{\n          role: \"system\",\n          content: SYSTEM_PROMPT\n        }, ...messages, {\n          role: \"user\",\n          content: inputMessage\n        }]\n      });\n      const assistantMessage = response.choices[0].message.content;\n      setMessages(prevMessages => [...prevMessages, {\n        role: 'assistant',\n        content: assistantMessage\n      }]);\n    } catch (error) {\n      console.error('Error calling OpenAI API:', error);\n      setMessages(prevMessages => [...prevMessages, {\n        role: 'assistant',\n        content: \"I'm sorry, I encountered an error. Please try again.\"\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${isDarkMode ? 'dark-mode' : 'light-mode'}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Triage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"theme-toggle\",\n          onClick: () => setIsDarkMode(!isDarkMode),\n          children: isDarkMode ? '‚òÄÔ∏è' : 'üåô'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages-container\",\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.role}`,\n          children: message.content\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputMessage,\n          onChange: e => setInputMessage(e.target.value),\n          placeholder: \"Describe your symptoms...\",\n          onKeyPress: e => e.key === 'Enter' && handleSendMessage()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3pmWkWhyY3fj5BYoKMOlYCAQ/DU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","OpenAI","SYSTEM_PROMPT","INITIAL_MESSAGE","jsxDEV","_jsxDEV","client","apiKey","process","env","REACT_APP_OPENAI_API_KEY","dangerouslyAllowBrowser","App","_s","messages","setMessages","role","content","inputMessage","setInputMessage","isDarkMode","setIsDarkMode","handleSendMessage","trim","response","chat","completions","create","model","assistantMessage","choices","message","prevMessages","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","index","type","value","onChange","e","target","placeholder","onKeyPress","key","_c","$RefreshReg$"],"sources":["/Users/youngchen/Downloads/cs224g-triage/src/App.js"],"sourcesContent":["import './App.css';\nimport { useState } from 'react';\nimport OpenAI from 'openai';\nimport { SYSTEM_PROMPT, INITIAL_MESSAGE } from './prompts';\n\nconst client = new OpenAI({\n  apiKey: process.env.REACT_APP_OPENAI_API_KEY,\n  dangerouslyAllowBrowser: true\n});\n\nfunction App() {\n  const [messages, setMessages] = useState([\n    { role: 'assistant', content: INITIAL_MESSAGE }\n  ]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isDarkMode, setIsDarkMode] = useState(false);\n\n  const handleSendMessage = async () => {\n    if (inputMessage.trim() === '') return;\n    \n    setMessages([...messages, { role: 'user', content: inputMessage }]);\n    setInputMessage('');\n\n    try {\n      const response = await client.chat.completions.create({\n        model: \"gpt-4o-mini\",\n        messages: [\n          { role: \"system\", content: SYSTEM_PROMPT },\n          ...messages,\n          { role: \"user\", content: inputMessage }\n        ]\n      });\n\n      const assistantMessage = response.choices[0].message.content;\n      setMessages(prevMessages => [...prevMessages, { role: 'assistant', content: assistantMessage }]);\n    } \n    catch (error) {\n      console.error('Error calling OpenAI API:', error);\n      setMessages(prevMessages => [...prevMessages, { \n        role: 'assistant', \n        content: \"I'm sorry, I encountered an error. Please try again.\" \n      }]);\n    }\n  };\n\n  return (\n    <div className={`App ${isDarkMode ? 'dark-mode' : 'light-mode'}`}>\n      <div className=\"chat-container\">\n        <header className=\"chat-header\">\n          <h1>Triage</h1>\n          <button \n            className=\"theme-toggle\"\n            onClick={() => setIsDarkMode(!isDarkMode)}\n          >\n            {isDarkMode ? '‚òÄÔ∏è' : 'üåô'}\n          </button>\n        </header>\n        \n        <div className=\"messages-container\">\n          {messages.map((message, index) => (\n            <div key={index} className={`message ${message.role}`}>\n              {message.content}\n            </div>\n          ))}\n        </div>\n\n        <div className=\"input-container\">\n          <input\n            type=\"text\"\n            value={inputMessage}\n            onChange={(e) => setInputMessage(e.target.value)}\n            placeholder=\"Describe your symptoms...\"\n            onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}\n          />\n          <button onClick={handleSendMessage}>Send</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}