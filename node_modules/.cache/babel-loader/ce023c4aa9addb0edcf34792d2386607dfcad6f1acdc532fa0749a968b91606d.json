{"ast":null,"code":"import { BaseOutputParser } from \"@langchain/core/output_parsers\";\n/**\n * The NoOpOutputParser class is a type of output parser that does not\n * perform any operations on the output. It extends the BaseOutputParser\n * class and is part of the LangChain's output parsers module. This class\n * is useful in scenarios where the raw output of the Large Language\n * Models (LLMs) is required.\n */\nexport class NoOpOutputParser extends BaseOutputParser {\n  constructor() {\n    super(...arguments);\n    Object.defineProperty(this, \"lc_namespace\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: [\"langchain\", \"output_parsers\", \"default\"]\n    });\n    Object.defineProperty(this, \"lc_serializable\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n  }\n  static lc_name() {\n    return \"NoOpOutputParser\";\n  }\n  /**\n   * This method takes a string as input and returns the same string as\n   * output. It does not perform any operations on the input string.\n   * @param text The input string to be parsed.\n   * @returns The same input string without any operations performed on it.\n   */\n  parse(text) {\n    return Promise.resolve(text);\n  }\n  /**\n   * This method returns an empty string. It does not provide any formatting\n   * instructions.\n   * @returns An empty string, indicating no formatting instructions.\n   */\n  getFormatInstructions() {\n    return \"\";\n  }\n}","map":{"version":3,"names":["BaseOutputParser","NoOpOutputParser","constructor","arguments","Object","defineProperty","enumerable","configurable","writable","value","lc_name","parse","text","Promise","resolve","getFormatInstructions"],"sources":["/Users/youngchen/Downloads/cs224g-triage/node_modules/langchain/dist/output_parsers/noop.js"],"sourcesContent":["import { BaseOutputParser } from \"@langchain/core/output_parsers\";\n/**\n * The NoOpOutputParser class is a type of output parser that does not\n * perform any operations on the output. It extends the BaseOutputParser\n * class and is part of the LangChain's output parsers module. This class\n * is useful in scenarios where the raw output of the Large Language\n * Models (LLMs) is required.\n */\nexport class NoOpOutputParser extends BaseOutputParser {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"output_parsers\", \"default\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n    }\n    static lc_name() {\n        return \"NoOpOutputParser\";\n    }\n    /**\n     * This method takes a string as input and returns the same string as\n     * output. It does not perform any operations on the input string.\n     * @param text The input string to be parsed.\n     * @returns The same input string without any operations performed on it.\n     */\n    parse(text) {\n        return Promise.resolve(text);\n    }\n    /**\n     * This method returns an empty string. It does not provide any formatting\n     * instructions.\n     * @returns An empty string, indicating no formatting instructions.\n     */\n    getFormatInstructions() {\n        return \"\";\n    }\n}\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,gCAAgC;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,gBAAgB,SAASD,gBAAgB,CAAC;EACnDE,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,GAAGC,SAAS,CAAC;IACnBC,MAAM,CAACC,cAAc,CAAC,IAAI,EAAE,cAAc,EAAE;MACxCC,UAAU,EAAE,IAAI;MAChBC,YAAY,EAAE,IAAI;MAClBC,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAE,CAAC,WAAW,EAAE,gBAAgB,EAAE,SAAS;IACpD,CAAC,CAAC;IACFL,MAAM,CAACC,cAAc,CAAC,IAAI,EAAE,iBAAiB,EAAE;MAC3CC,UAAU,EAAE,IAAI;MAChBC,YAAY,EAAE,IAAI;MAClBC,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAE;IACX,CAAC,CAAC;EACN;EACA,OAAOC,OAAOA,CAAA,EAAG;IACb,OAAO,kBAAkB;EAC7B;EACA;AACJ;AACA;AACA;AACA;AACA;EACIC,KAAKA,CAACC,IAAI,EAAE;IACR,OAAOC,OAAO,CAACC,OAAO,CAACF,IAAI,CAAC;EAChC;EACA;AACJ;AACA;AACA;AACA;EACIG,qBAAqBA,CAAA,EAAG;IACpB,OAAO,EAAE;EACb;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}