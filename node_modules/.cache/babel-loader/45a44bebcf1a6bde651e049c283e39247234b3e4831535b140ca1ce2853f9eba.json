{"ast":null,"code":"import { BaseChain } from \"./base.js\";\n/**\n * Class that represents a transform chain. It extends the `BaseChain`\n * class and implements the `TransformChainFields` interface. It provides\n * a way to transform input values to output values using a specified\n * transform function.\n *\n * @deprecated\n * Switch to {@link https://js.langchain.com/docs/expression_language/ | expression language}.\n * Will be removed in 0.2.0\n */\nexport class TransformChain extends BaseChain {\n  static lc_name() {\n    return \"TransformChain\";\n  }\n  _chainType() {\n    return \"transform\";\n  }\n  get inputKeys() {\n    return this.inputVariables;\n  }\n  get outputKeys() {\n    return this.outputVariables;\n  }\n  constructor(fields) {\n    super(fields);\n    Object.defineProperty(this, \"transformFunc\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"inputVariables\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"outputVariables\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this.transformFunc = fields.transform;\n    this.inputVariables = fields.inputVariables;\n    this.outputVariables = fields.outputVariables;\n  }\n  async _call(values, runManager) {\n    return this.transformFunc(values, runManager?.getChild(\"transform\"));\n  }\n}","map":{"version":3,"names":["BaseChain","TransformChain","lc_name","_chainType","inputKeys","inputVariables","outputKeys","outputVariables","constructor","fields","Object","defineProperty","enumerable","configurable","writable","value","transformFunc","transform","_call","values","runManager","getChild"],"sources":["/Users/youngchen/Downloads/cs224g-triage/node_modules/langchain/dist/chains/transform.js"],"sourcesContent":["import { BaseChain } from \"./base.js\";\n/**\n * Class that represents a transform chain. It extends the `BaseChain`\n * class and implements the `TransformChainFields` interface. It provides\n * a way to transform input values to output values using a specified\n * transform function.\n *\n * @deprecated\n * Switch to {@link https://js.langchain.com/docs/expression_language/ | expression language}.\n * Will be removed in 0.2.0\n */\nexport class TransformChain extends BaseChain {\n    static lc_name() {\n        return \"TransformChain\";\n    }\n    _chainType() {\n        return \"transform\";\n    }\n    get inputKeys() {\n        return this.inputVariables;\n    }\n    get outputKeys() {\n        return this.outputVariables;\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"transformFunc\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"inputVariables\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"outputVariables\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.transformFunc = fields.transform;\n        this.inputVariables = fields.inputVariables;\n        this.outputVariables = fields.outputVariables;\n    }\n    async _call(values, runManager) {\n        return this.transformFunc(values, runManager?.getChild(\"transform\"));\n    }\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,WAAW;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,cAAc,SAASD,SAAS,CAAC;EAC1C,OAAOE,OAAOA,CAAA,EAAG;IACb,OAAO,gBAAgB;EAC3B;EACAC,UAAUA,CAAA,EAAG;IACT,OAAO,WAAW;EACtB;EACA,IAAIC,SAASA,CAAA,EAAG;IACZ,OAAO,IAAI,CAACC,cAAc;EAC9B;EACA,IAAIC,UAAUA,CAAA,EAAG;IACb,OAAO,IAAI,CAACC,eAAe;EAC/B;EACAC,WAAWA,CAACC,MAAM,EAAE;IAChB,KAAK,CAACA,MAAM,CAAC;IACbC,MAAM,CAACC,cAAc,CAAC,IAAI,EAAE,eAAe,EAAE;MACzCC,UAAU,EAAE,IAAI;MAChBC,YAAY,EAAE,IAAI;MAClBC,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAE,KAAK;IAChB,CAAC,CAAC;IACFL,MAAM,CAACC,cAAc,CAAC,IAAI,EAAE,gBAAgB,EAAE;MAC1CC,UAAU,EAAE,IAAI;MAChBC,YAAY,EAAE,IAAI;MAClBC,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAE,KAAK;IAChB,CAAC,CAAC;IACFL,MAAM,CAACC,cAAc,CAAC,IAAI,EAAE,iBAAiB,EAAE;MAC3CC,UAAU,EAAE,IAAI;MAChBC,YAAY,EAAE,IAAI;MAClBC,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAE,KAAK;IAChB,CAAC,CAAC;IACF,IAAI,CAACC,aAAa,GAAGP,MAAM,CAACQ,SAAS;IACrC,IAAI,CAACZ,cAAc,GAAGI,MAAM,CAACJ,cAAc;IAC3C,IAAI,CAACE,eAAe,GAAGE,MAAM,CAACF,eAAe;EACjD;EACA,MAAMW,KAAKA,CAACC,MAAM,EAAEC,UAAU,EAAE;IAC5B,OAAO,IAAI,CAACJ,aAAa,CAACG,MAAM,EAAEC,UAAU,EAAEC,QAAQ,CAAC,WAAW,CAAC,CAAC;EACxE;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}