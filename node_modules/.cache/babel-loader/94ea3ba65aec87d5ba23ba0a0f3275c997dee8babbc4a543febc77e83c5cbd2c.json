{"ast":null,"code":"import * as uuid from \"uuid\";\nimport { getEnvironmentVariable, getLangSmithEnvironmentVariable, getRuntimeEnvironment } from \"./utils/env.js\";\nimport { Client } from \"./client.js\";\nimport { isTracingEnabled } from \"./env.js\";\nimport { warnOnce } from \"./utils/warn.js\";\nimport { _LC_CONTEXT_VARIABLES_KEY } from \"./singletons/constants.js\";\nfunction stripNonAlphanumeric(input) {\n  return input.replace(/[-:.]/g, \"\");\n}\nexport function convertToDottedOrderFormat(epoch, runId, executionOrder = 1) {\n  // Date only has millisecond precision, so we use the microseconds to break\n  // possible ties, avoiding incorrect run order\n  const paddedOrder = executionOrder.toFixed(0).slice(0, 3).padStart(3, \"0\");\n  return stripNonAlphanumeric(`${new Date(epoch).toISOString().slice(0, -1)}${paddedOrder}Z`) + runId;\n}\n/**\n * Baggage header information\n */\nclass Baggage {\n  constructor(metadata, tags) {\n    Object.defineProperty(this, \"metadata\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"tags\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this.metadata = metadata;\n    this.tags = tags;\n  }\n  static fromHeader(value) {\n    const items = value.split(\",\");\n    let metadata = {};\n    let tags = [];\n    for (const item of items) {\n      const [key, uriValue] = item.split(\"=\");\n      const value = decodeURIComponent(uriValue);\n      if (key === \"langsmith-metadata\") {\n        metadata = JSON.parse(value);\n      } else if (key === \"langsmith-tags\") {\n        tags = value.split(\",\");\n      }\n    }\n    return new Baggage(metadata, tags);\n  }\n  toHeader() {\n    const items = [];\n    if (this.metadata && Object.keys(this.metadata).length > 0) {\n      items.push(`langsmith-metadata=${encodeURIComponent(JSON.stringify(this.metadata))}`);\n    }\n    if (this.tags && this.tags.length > 0) {\n      items.push(`langsmith-tags=${encodeURIComponent(this.tags.join(\",\"))}`);\n    }\n    return items.join(\",\");\n  }\n}\nexport class RunTree {\n  constructor(originalConfig) {\n    Object.defineProperty(this, \"id\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"run_type\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"project_name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"parent_run\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"child_runs\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"start_time\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"end_time\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"extra\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"tags\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"error\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"serialized\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"inputs\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"outputs\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"reference_example_id\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"client\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"events\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"trace_id\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"dotted_order\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"tracingEnabled\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"execution_order\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"child_execution_order\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    /**\n     * Attachments associated with the run.\n     * Each entry is a tuple of [mime_type, bytes]\n     */\n    Object.defineProperty(this, \"attachments\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    // If you pass in a run tree directly, return a shallow clone\n    if (isRunTree(originalConfig)) {\n      Object.assign(this, {\n        ...originalConfig\n      });\n      return;\n    }\n    const defaultConfig = RunTree.getDefaultConfig();\n    const {\n      metadata,\n      ...config\n    } = originalConfig;\n    const client = config.client ?? RunTree.getSharedClient();\n    const dedupedMetadata = {\n      ...metadata,\n      ...config?.extra?.metadata\n    };\n    config.extra = {\n      ...config.extra,\n      metadata: dedupedMetadata\n    };\n    Object.assign(this, {\n      ...defaultConfig,\n      ...config,\n      client\n    });\n    if (!this.trace_id) {\n      if (this.parent_run) {\n        this.trace_id = this.parent_run.trace_id ?? this.id;\n      } else {\n        this.trace_id = this.id;\n      }\n    }\n    this.execution_order ??= 1;\n    this.child_execution_order ??= 1;\n    if (!this.dotted_order) {\n      const currentDottedOrder = convertToDottedOrderFormat(this.start_time, this.id, this.execution_order);\n      if (this.parent_run) {\n        this.dotted_order = this.parent_run.dotted_order + \".\" + currentDottedOrder;\n      } else {\n        this.dotted_order = currentDottedOrder;\n      }\n    }\n  }\n  static getDefaultConfig() {\n    return {\n      id: uuid.v4(),\n      run_type: \"chain\",\n      project_name: getLangSmithEnvironmentVariable(\"PROJECT\") ?? getEnvironmentVariable(\"LANGCHAIN_SESSION\") ??\n      // TODO: Deprecate\n      \"default\",\n      child_runs: [],\n      api_url: getEnvironmentVariable(\"LANGCHAIN_ENDPOINT\") ?? \"http://localhost:1984\",\n      api_key: getEnvironmentVariable(\"LANGCHAIN_API_KEY\"),\n      caller_options: {},\n      start_time: Date.now(),\n      serialized: {},\n      inputs: {},\n      extra: {}\n    };\n  }\n  static getSharedClient() {\n    if (!RunTree.sharedClient) {\n      RunTree.sharedClient = new Client();\n    }\n    return RunTree.sharedClient;\n  }\n  createChild(config) {\n    const child_execution_order = this.child_execution_order + 1;\n    const child = new RunTree({\n      ...config,\n      parent_run: this,\n      project_name: this.project_name,\n      client: this.client,\n      tracingEnabled: this.tracingEnabled,\n      execution_order: child_execution_order,\n      child_execution_order: child_execution_order\n    });\n    // Copy context vars over into the new run tree.\n    if (_LC_CONTEXT_VARIABLES_KEY in this) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      child[_LC_CONTEXT_VARIABLES_KEY] = this[_LC_CONTEXT_VARIABLES_KEY];\n    }\n    const LC_CHILD = Symbol.for(\"lc:child_config\");\n    const presentConfig = config.extra?.[LC_CHILD] ?? this.extra[LC_CHILD];\n    // tracing for LangChain is defined by the _parentRunId and runMap of the tracer\n    if (isRunnableConfigLike(presentConfig)) {\n      const newConfig = {\n        ...presentConfig\n      };\n      const callbacks = isCallbackManagerLike(newConfig.callbacks) ? newConfig.callbacks.copy?.() : undefined;\n      if (callbacks) {\n        // update the parent run id\n        Object.assign(callbacks, {\n          _parentRunId: child.id\n        });\n        // only populate if we're in a newer LC.JS version\n        callbacks.handlers?.find(isLangChainTracerLike)?.updateFromRunTree?.(child);\n        newConfig.callbacks = callbacks;\n      }\n      child.extra[LC_CHILD] = newConfig;\n    }\n    // propagate child_execution_order upwards\n    const visited = new Set();\n    let current = this;\n    while (current != null && !visited.has(current.id)) {\n      visited.add(current.id);\n      current.child_execution_order = Math.max(current.child_execution_order, child_execution_order);\n      current = current.parent_run;\n    }\n    this.child_runs.push(child);\n    return child;\n  }\n  async end(outputs, error, endTime = Date.now(), metadata) {\n    this.outputs = this.outputs ?? outputs;\n    this.error = this.error ?? error;\n    this.end_time = this.end_time ?? endTime;\n    if (metadata && Object.keys(metadata).length > 0) {\n      this.extra = this.extra ? {\n        ...this.extra,\n        metadata: {\n          ...this.extra.metadata,\n          ...metadata\n        }\n      } : {\n        metadata\n      };\n    }\n  }\n  _convertToCreate(run, runtimeEnv, excludeChildRuns = true) {\n    const runExtra = run.extra ?? {};\n    if (!runExtra.runtime) {\n      runExtra.runtime = {};\n    }\n    if (runtimeEnv) {\n      for (const [k, v] of Object.entries(runtimeEnv)) {\n        if (!runExtra.runtime[k]) {\n          runExtra.runtime[k] = v;\n        }\n      }\n    }\n    let child_runs;\n    let parent_run_id;\n    if (!excludeChildRuns) {\n      child_runs = run.child_runs.map(child_run => this._convertToCreate(child_run, runtimeEnv, excludeChildRuns));\n      parent_run_id = undefined;\n    } else {\n      parent_run_id = run.parent_run?.id;\n      child_runs = [];\n    }\n    const persistedRun = {\n      id: run.id,\n      name: run.name,\n      start_time: run.start_time,\n      end_time: run.end_time,\n      run_type: run.run_type,\n      reference_example_id: run.reference_example_id,\n      extra: runExtra,\n      serialized: run.serialized,\n      error: run.error,\n      inputs: run.inputs,\n      outputs: run.outputs,\n      session_name: run.project_name,\n      child_runs: child_runs,\n      parent_run_id: parent_run_id,\n      trace_id: run.trace_id,\n      dotted_order: run.dotted_order,\n      tags: run.tags,\n      attachments: run.attachments\n    };\n    return persistedRun;\n  }\n  async postRun(excludeChildRuns = true) {\n    try {\n      const runtimeEnv = getRuntimeEnvironment();\n      const runCreate = await this._convertToCreate(this, runtimeEnv, true);\n      await this.client.createRun(runCreate);\n      if (!excludeChildRuns) {\n        warnOnce(\"Posting with excludeChildRuns=false is deprecated and will be removed in a future version.\");\n        for (const childRun of this.child_runs) {\n          await childRun.postRun(false);\n        }\n      }\n    } catch (error) {\n      console.error(`Error in postRun for run ${this.id}:`, error);\n    }\n  }\n  async patchRun() {\n    try {\n      const runUpdate = {\n        end_time: this.end_time,\n        error: this.error,\n        inputs: this.inputs,\n        outputs: this.outputs,\n        parent_run_id: this.parent_run?.id,\n        reference_example_id: this.reference_example_id,\n        extra: this.extra,\n        events: this.events,\n        dotted_order: this.dotted_order,\n        trace_id: this.trace_id,\n        tags: this.tags,\n        attachments: this.attachments\n      };\n      await this.client.updateRun(this.id, runUpdate);\n    } catch (error) {\n      console.error(`Error in patchRun for run ${this.id}`, error);\n    }\n  }\n  toJSON() {\n    return this._convertToCreate(this, undefined, false);\n  }\n  static fromRunnableConfig(parentConfig, props) {\n    // We only handle the callback manager case for now\n    const callbackManager = parentConfig?.callbacks;\n    let parentRun;\n    let projectName;\n    let client;\n    let tracingEnabled = isTracingEnabled();\n    if (callbackManager) {\n      const parentRunId = callbackManager?.getParentRunId?.() ?? \"\";\n      const langChainTracer = callbackManager?.handlers?.find(handler => handler?.name == \"langchain_tracer\");\n      parentRun = langChainTracer?.getRun?.(parentRunId);\n      projectName = langChainTracer?.projectName;\n      client = langChainTracer?.client;\n      tracingEnabled = tracingEnabled || !!langChainTracer;\n    }\n    if (!parentRun) {\n      return new RunTree({\n        ...props,\n        client,\n        tracingEnabled,\n        project_name: projectName\n      });\n    }\n    const parentRunTree = new RunTree({\n      name: parentRun.name,\n      id: parentRun.id,\n      trace_id: parentRun.trace_id,\n      dotted_order: parentRun.dotted_order,\n      client,\n      tracingEnabled,\n      project_name: projectName,\n      tags: [...new Set((parentRun?.tags ?? []).concat(parentConfig?.tags ?? []))],\n      extra: {\n        metadata: {\n          ...parentRun?.extra?.metadata,\n          ...parentConfig?.metadata\n        }\n      }\n    });\n    return parentRunTree.createChild(props);\n  }\n  static fromDottedOrder(dottedOrder) {\n    return this.fromHeaders({\n      \"langsmith-trace\": dottedOrder\n    });\n  }\n  static fromHeaders(headers, inheritArgs) {\n    const rawHeaders = \"get\" in headers && typeof headers.get === \"function\" ? {\n      \"langsmith-trace\": headers.get(\"langsmith-trace\"),\n      baggage: headers.get(\"baggage\")\n    } : headers;\n    const headerTrace = rawHeaders[\"langsmith-trace\"];\n    if (!headerTrace || typeof headerTrace !== \"string\") return undefined;\n    const parentDottedOrder = headerTrace.trim();\n    const parsedDottedOrder = parentDottedOrder.split(\".\").map(part => {\n      const [strTime, uuid] = part.split(\"Z\");\n      return {\n        strTime,\n        time: Date.parse(strTime + \"Z\"),\n        uuid\n      };\n    });\n    const traceId = parsedDottedOrder[0].uuid;\n    const config = {\n      ...inheritArgs,\n      name: inheritArgs?.[\"name\"] ?? \"parent\",\n      run_type: inheritArgs?.[\"run_type\"] ?? \"chain\",\n      start_time: inheritArgs?.[\"start_time\"] ?? Date.now(),\n      id: parsedDottedOrder.at(-1)?.uuid,\n      trace_id: traceId,\n      dotted_order: parentDottedOrder\n    };\n    if (rawHeaders[\"baggage\"] && typeof rawHeaders[\"baggage\"] === \"string\") {\n      const baggage = Baggage.fromHeader(rawHeaders[\"baggage\"]);\n      config.metadata = baggage.metadata;\n      config.tags = baggage.tags;\n    }\n    return new RunTree(config);\n  }\n  toHeaders(headers) {\n    const result = {\n      \"langsmith-trace\": this.dotted_order,\n      baggage: new Baggage(this.extra?.metadata, this.tags).toHeader()\n    };\n    if (headers) {\n      for (const [key, value] of Object.entries(result)) {\n        headers.set(key, value);\n      }\n    }\n    return result;\n  }\n}\nObject.defineProperty(RunTree, \"sharedClient\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: null\n});\nexport function isRunTree(x) {\n  return x !== undefined && typeof x.createChild === \"function\" && typeof x.postRun === \"function\";\n}\nfunction isLangChainTracerLike(x) {\n  return typeof x === \"object\" && x != null && typeof x.name === \"string\" && x.name === \"langchain_tracer\";\n}\nfunction containsLangChainTracerLike(x) {\n  return Array.isArray(x) && x.some(callback => isLangChainTracerLike(callback));\n}\nfunction isCallbackManagerLike(x) {\n  return typeof x === \"object\" && x != null && Array.isArray(x.handlers);\n}\nexport function isRunnableConfigLike(x) {\n  // Check that it's an object with a callbacks arg\n  // that has either a CallbackManagerLike object with a langchain tracer within it\n  // or an array with a LangChainTracerLike object within it\n  return x !== undefined && typeof x.callbacks === \"object\" && (\n  // Callback manager with a langchain tracer\n  containsLangChainTracerLike(x.callbacks?.handlers) ||\n  // Or it's an array with a LangChainTracerLike object within it\n  containsLangChainTracerLike(x.callbacks));\n}","map":{"version":3,"names":["uuid","getEnvironmentVariable","getLangSmithEnvironmentVariable","getRuntimeEnvironment","Client","isTracingEnabled","warnOnce","_LC_CONTEXT_VARIABLES_KEY","stripNonAlphanumeric","input","replace","convertToDottedOrderFormat","epoch","runId","executionOrder","paddedOrder","toFixed","slice","padStart","Date","toISOString","Baggage","constructor","metadata","tags","Object","defineProperty","enumerable","configurable","writable","value","fromHeader","items","split","item","key","uriValue","decodeURIComponent","JSON","parse","toHeader","keys","length","push","encodeURIComponent","stringify","join","RunTree","originalConfig","isRunTree","assign","defaultConfig","getDefaultConfig","config","client","getSharedClient","dedupedMetadata","extra","trace_id","parent_run","id","execution_order","child_execution_order","dotted_order","currentDottedOrder","start_time","v4","run_type","project_name","child_runs","api_url","api_key","caller_options","now","serialized","inputs","sharedClient","createChild","child","tracingEnabled","LC_CHILD","Symbol","for","presentConfig","isRunnableConfigLike","newConfig","callbacks","isCallbackManagerLike","copy","undefined","_parentRunId","handlers","find","isLangChainTracerLike","updateFromRunTree","visited","Set","current","has","add","Math","max","end","outputs","error","endTime","end_time","_convertToCreate","run","runtimeEnv","excludeChildRuns","runExtra","runtime","k","v","entries","parent_run_id","map","child_run","persistedRun","name","reference_example_id","session_name","attachments","postRun","runCreate","createRun","childRun","console","patchRun","runUpdate","events","updateRun","toJSON","fromRunnableConfig","parentConfig","props","callbackManager","parentRun","projectName","parentRunId","getParentRunId","langChainTracer","handler","getRun","parentRunTree","concat","fromDottedOrder","dottedOrder","fromHeaders","headers","inheritArgs","rawHeaders","get","baggage","headerTrace","parentDottedOrder","trim","parsedDottedOrder","part","strTime","time","traceId","at","toHeaders","result","set","x","containsLangChainTracerLike","Array","isArray","some","callback"],"sources":["/Users/youngchen/Downloads/cs224g-triage/node_modules/langsmith/dist/run_trees.js"],"sourcesContent":["import * as uuid from \"uuid\";\nimport { getEnvironmentVariable, getLangSmithEnvironmentVariable, getRuntimeEnvironment, } from \"./utils/env.js\";\nimport { Client } from \"./client.js\";\nimport { isTracingEnabled } from \"./env.js\";\nimport { warnOnce } from \"./utils/warn.js\";\nimport { _LC_CONTEXT_VARIABLES_KEY } from \"./singletons/constants.js\";\nfunction stripNonAlphanumeric(input) {\n    return input.replace(/[-:.]/g, \"\");\n}\nexport function convertToDottedOrderFormat(epoch, runId, executionOrder = 1) {\n    // Date only has millisecond precision, so we use the microseconds to break\n    // possible ties, avoiding incorrect run order\n    const paddedOrder = executionOrder.toFixed(0).slice(0, 3).padStart(3, \"0\");\n    return (stripNonAlphanumeric(`${new Date(epoch).toISOString().slice(0, -1)}${paddedOrder}Z`) + runId);\n}\n/**\n * Baggage header information\n */\nclass Baggage {\n    constructor(metadata, tags) {\n        Object.defineProperty(this, \"metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.metadata = metadata;\n        this.tags = tags;\n    }\n    static fromHeader(value) {\n        const items = value.split(\",\");\n        let metadata = {};\n        let tags = [];\n        for (const item of items) {\n            const [key, uriValue] = item.split(\"=\");\n            const value = decodeURIComponent(uriValue);\n            if (key === \"langsmith-metadata\") {\n                metadata = JSON.parse(value);\n            }\n            else if (key === \"langsmith-tags\") {\n                tags = value.split(\",\");\n            }\n        }\n        return new Baggage(metadata, tags);\n    }\n    toHeader() {\n        const items = [];\n        if (this.metadata && Object.keys(this.metadata).length > 0) {\n            items.push(`langsmith-metadata=${encodeURIComponent(JSON.stringify(this.metadata))}`);\n        }\n        if (this.tags && this.tags.length > 0) {\n            items.push(`langsmith-tags=${encodeURIComponent(this.tags.join(\",\"))}`);\n        }\n        return items.join(\",\");\n    }\n}\nexport class RunTree {\n    constructor(originalConfig) {\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"run_type\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"project_name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"parent_run\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"child_runs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"start_time\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"end_time\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"extra\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"error\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"serialized\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"inputs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"outputs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"reference_example_id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"events\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"trace_id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"dotted_order\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tracingEnabled\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"execution_order\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"child_execution_order\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\n         * Attachments associated with the run.\n         * Each entry is a tuple of [mime_type, bytes]\n         */\n        Object.defineProperty(this, \"attachments\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // If you pass in a run tree directly, return a shallow clone\n        if (isRunTree(originalConfig)) {\n            Object.assign(this, { ...originalConfig });\n            return;\n        }\n        const defaultConfig = RunTree.getDefaultConfig();\n        const { metadata, ...config } = originalConfig;\n        const client = config.client ?? RunTree.getSharedClient();\n        const dedupedMetadata = {\n            ...metadata,\n            ...config?.extra?.metadata,\n        };\n        config.extra = { ...config.extra, metadata: dedupedMetadata };\n        Object.assign(this, { ...defaultConfig, ...config, client });\n        if (!this.trace_id) {\n            if (this.parent_run) {\n                this.trace_id = this.parent_run.trace_id ?? this.id;\n            }\n            else {\n                this.trace_id = this.id;\n            }\n        }\n        this.execution_order ??= 1;\n        this.child_execution_order ??= 1;\n        if (!this.dotted_order) {\n            const currentDottedOrder = convertToDottedOrderFormat(this.start_time, this.id, this.execution_order);\n            if (this.parent_run) {\n                this.dotted_order =\n                    this.parent_run.dotted_order + \".\" + currentDottedOrder;\n            }\n            else {\n                this.dotted_order = currentDottedOrder;\n            }\n        }\n    }\n    static getDefaultConfig() {\n        return {\n            id: uuid.v4(),\n            run_type: \"chain\",\n            project_name: getLangSmithEnvironmentVariable(\"PROJECT\") ??\n                getEnvironmentVariable(\"LANGCHAIN_SESSION\") ?? // TODO: Deprecate\n                \"default\",\n            child_runs: [],\n            api_url: getEnvironmentVariable(\"LANGCHAIN_ENDPOINT\") ?? \"http://localhost:1984\",\n            api_key: getEnvironmentVariable(\"LANGCHAIN_API_KEY\"),\n            caller_options: {},\n            start_time: Date.now(),\n            serialized: {},\n            inputs: {},\n            extra: {},\n        };\n    }\n    static getSharedClient() {\n        if (!RunTree.sharedClient) {\n            RunTree.sharedClient = new Client();\n        }\n        return RunTree.sharedClient;\n    }\n    createChild(config) {\n        const child_execution_order = this.child_execution_order + 1;\n        const child = new RunTree({\n            ...config,\n            parent_run: this,\n            project_name: this.project_name,\n            client: this.client,\n            tracingEnabled: this.tracingEnabled,\n            execution_order: child_execution_order,\n            child_execution_order: child_execution_order,\n        });\n        // Copy context vars over into the new run tree.\n        if (_LC_CONTEXT_VARIABLES_KEY in this) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            child[_LC_CONTEXT_VARIABLES_KEY] =\n                this[_LC_CONTEXT_VARIABLES_KEY];\n        }\n        const LC_CHILD = Symbol.for(\"lc:child_config\");\n        const presentConfig = config.extra?.[LC_CHILD] ??\n            this.extra[LC_CHILD];\n        // tracing for LangChain is defined by the _parentRunId and runMap of the tracer\n        if (isRunnableConfigLike(presentConfig)) {\n            const newConfig = { ...presentConfig };\n            const callbacks = isCallbackManagerLike(newConfig.callbacks)\n                ? newConfig.callbacks.copy?.()\n                : undefined;\n            if (callbacks) {\n                // update the parent run id\n                Object.assign(callbacks, { _parentRunId: child.id });\n                // only populate if we're in a newer LC.JS version\n                callbacks.handlers\n                    ?.find(isLangChainTracerLike)\n                    ?.updateFromRunTree?.(child);\n                newConfig.callbacks = callbacks;\n            }\n            child.extra[LC_CHILD] = newConfig;\n        }\n        // propagate child_execution_order upwards\n        const visited = new Set();\n        let current = this;\n        while (current != null && !visited.has(current.id)) {\n            visited.add(current.id);\n            current.child_execution_order = Math.max(current.child_execution_order, child_execution_order);\n            current = current.parent_run;\n        }\n        this.child_runs.push(child);\n        return child;\n    }\n    async end(outputs, error, endTime = Date.now(), metadata) {\n        this.outputs = this.outputs ?? outputs;\n        this.error = this.error ?? error;\n        this.end_time = this.end_time ?? endTime;\n        if (metadata && Object.keys(metadata).length > 0) {\n            this.extra = this.extra\n                ? { ...this.extra, metadata: { ...this.extra.metadata, ...metadata } }\n                : { metadata };\n        }\n    }\n    _convertToCreate(run, runtimeEnv, excludeChildRuns = true) {\n        const runExtra = run.extra ?? {};\n        if (!runExtra.runtime) {\n            runExtra.runtime = {};\n        }\n        if (runtimeEnv) {\n            for (const [k, v] of Object.entries(runtimeEnv)) {\n                if (!runExtra.runtime[k]) {\n                    runExtra.runtime[k] = v;\n                }\n            }\n        }\n        let child_runs;\n        let parent_run_id;\n        if (!excludeChildRuns) {\n            child_runs = run.child_runs.map((child_run) => this._convertToCreate(child_run, runtimeEnv, excludeChildRuns));\n            parent_run_id = undefined;\n        }\n        else {\n            parent_run_id = run.parent_run?.id;\n            child_runs = [];\n        }\n        const persistedRun = {\n            id: run.id,\n            name: run.name,\n            start_time: run.start_time,\n            end_time: run.end_time,\n            run_type: run.run_type,\n            reference_example_id: run.reference_example_id,\n            extra: runExtra,\n            serialized: run.serialized,\n            error: run.error,\n            inputs: run.inputs,\n            outputs: run.outputs,\n            session_name: run.project_name,\n            child_runs: child_runs,\n            parent_run_id: parent_run_id,\n            trace_id: run.trace_id,\n            dotted_order: run.dotted_order,\n            tags: run.tags,\n            attachments: run.attachments,\n        };\n        return persistedRun;\n    }\n    async postRun(excludeChildRuns = true) {\n        try {\n            const runtimeEnv = getRuntimeEnvironment();\n            const runCreate = await this._convertToCreate(this, runtimeEnv, true);\n            await this.client.createRun(runCreate);\n            if (!excludeChildRuns) {\n                warnOnce(\"Posting with excludeChildRuns=false is deprecated and will be removed in a future version.\");\n                for (const childRun of this.child_runs) {\n                    await childRun.postRun(false);\n                }\n            }\n        }\n        catch (error) {\n            console.error(`Error in postRun for run ${this.id}:`, error);\n        }\n    }\n    async patchRun() {\n        try {\n            const runUpdate = {\n                end_time: this.end_time,\n                error: this.error,\n                inputs: this.inputs,\n                outputs: this.outputs,\n                parent_run_id: this.parent_run?.id,\n                reference_example_id: this.reference_example_id,\n                extra: this.extra,\n                events: this.events,\n                dotted_order: this.dotted_order,\n                trace_id: this.trace_id,\n                tags: this.tags,\n                attachments: this.attachments,\n            };\n            await this.client.updateRun(this.id, runUpdate);\n        }\n        catch (error) {\n            console.error(`Error in patchRun for run ${this.id}`, error);\n        }\n    }\n    toJSON() {\n        return this._convertToCreate(this, undefined, false);\n    }\n    static fromRunnableConfig(parentConfig, props) {\n        // We only handle the callback manager case for now\n        const callbackManager = parentConfig?.callbacks;\n        let parentRun;\n        let projectName;\n        let client;\n        let tracingEnabled = isTracingEnabled();\n        if (callbackManager) {\n            const parentRunId = callbackManager?.getParentRunId?.() ?? \"\";\n            const langChainTracer = callbackManager?.handlers?.find((handler) => handler?.name == \"langchain_tracer\");\n            parentRun = langChainTracer?.getRun?.(parentRunId);\n            projectName = langChainTracer?.projectName;\n            client = langChainTracer?.client;\n            tracingEnabled = tracingEnabled || !!langChainTracer;\n        }\n        if (!parentRun) {\n            return new RunTree({\n                ...props,\n                client,\n                tracingEnabled,\n                project_name: projectName,\n            });\n        }\n        const parentRunTree = new RunTree({\n            name: parentRun.name,\n            id: parentRun.id,\n            trace_id: parentRun.trace_id,\n            dotted_order: parentRun.dotted_order,\n            client,\n            tracingEnabled,\n            project_name: projectName,\n            tags: [\n                ...new Set((parentRun?.tags ?? []).concat(parentConfig?.tags ?? [])),\n            ],\n            extra: {\n                metadata: {\n                    ...parentRun?.extra?.metadata,\n                    ...parentConfig?.metadata,\n                },\n            },\n        });\n        return parentRunTree.createChild(props);\n    }\n    static fromDottedOrder(dottedOrder) {\n        return this.fromHeaders({ \"langsmith-trace\": dottedOrder });\n    }\n    static fromHeaders(headers, inheritArgs) {\n        const rawHeaders = \"get\" in headers && typeof headers.get === \"function\"\n            ? {\n                \"langsmith-trace\": headers.get(\"langsmith-trace\"),\n                baggage: headers.get(\"baggage\"),\n            }\n            : headers;\n        const headerTrace = rawHeaders[\"langsmith-trace\"];\n        if (!headerTrace || typeof headerTrace !== \"string\")\n            return undefined;\n        const parentDottedOrder = headerTrace.trim();\n        const parsedDottedOrder = parentDottedOrder.split(\".\").map((part) => {\n            const [strTime, uuid] = part.split(\"Z\");\n            return { strTime, time: Date.parse(strTime + \"Z\"), uuid };\n        });\n        const traceId = parsedDottedOrder[0].uuid;\n        const config = {\n            ...inheritArgs,\n            name: inheritArgs?.[\"name\"] ?? \"parent\",\n            run_type: inheritArgs?.[\"run_type\"] ?? \"chain\",\n            start_time: inheritArgs?.[\"start_time\"] ?? Date.now(),\n            id: parsedDottedOrder.at(-1)?.uuid,\n            trace_id: traceId,\n            dotted_order: parentDottedOrder,\n        };\n        if (rawHeaders[\"baggage\"] && typeof rawHeaders[\"baggage\"] === \"string\") {\n            const baggage = Baggage.fromHeader(rawHeaders[\"baggage\"]);\n            config.metadata = baggage.metadata;\n            config.tags = baggage.tags;\n        }\n        return new RunTree(config);\n    }\n    toHeaders(headers) {\n        const result = {\n            \"langsmith-trace\": this.dotted_order,\n            baggage: new Baggage(this.extra?.metadata, this.tags).toHeader(),\n        };\n        if (headers) {\n            for (const [key, value] of Object.entries(result)) {\n                headers.set(key, value);\n            }\n        }\n        return result;\n    }\n}\nObject.defineProperty(RunTree, \"sharedClient\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: null\n});\nexport function isRunTree(x) {\n    return (x !== undefined &&\n        typeof x.createChild === \"function\" &&\n        typeof x.postRun === \"function\");\n}\nfunction isLangChainTracerLike(x) {\n    return (typeof x === \"object\" &&\n        x != null &&\n        typeof x.name === \"string\" &&\n        x.name === \"langchain_tracer\");\n}\nfunction containsLangChainTracerLike(x) {\n    return (Array.isArray(x) && x.some((callback) => isLangChainTracerLike(callback)));\n}\nfunction isCallbackManagerLike(x) {\n    return (typeof x === \"object\" &&\n        x != null &&\n        Array.isArray(x.handlers));\n}\nexport function isRunnableConfigLike(x) {\n    // Check that it's an object with a callbacks arg\n    // that has either a CallbackManagerLike object with a langchain tracer within it\n    // or an array with a LangChainTracerLike object within it\n    return (x !== undefined &&\n        typeof x.callbacks === \"object\" &&\n        // Callback manager with a langchain tracer\n        (containsLangChainTracerLike(x.callbacks?.handlers) ||\n            // Or it's an array with a LangChainTracerLike object within it\n            containsLangChainTracerLike(x.callbacks)));\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}