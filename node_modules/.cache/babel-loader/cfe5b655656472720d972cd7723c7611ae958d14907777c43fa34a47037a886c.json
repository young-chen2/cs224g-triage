{"ast":null,"code":"import * as yaml from \"js-yaml\";\nexport class OpenAPISpec {\n  constructor(document) {\n    Object.defineProperty(this, \"document\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: document\n    });\n  }\n  get baseUrl() {\n    return this.document.servers ? this.document.servers[0].url : undefined;\n  }\n  getPathsStrict() {\n    if (!this.document.paths) {\n      throw new Error(\"No paths found in spec\");\n    }\n    return this.document.paths;\n  }\n  getParametersStrict() {\n    if (!this.document.components?.parameters) {\n      throw new Error(\"No parameters found in spec\");\n    }\n    return this.document.components.parameters;\n  }\n  getSchemasStrict() {\n    if (!this.document.components?.schemas) {\n      throw new Error(\"No schemas found in spec.\");\n    }\n    return this.document.components.schemas;\n  }\n  getRequestBodiesStrict() {\n    if (!this.document.components?.requestBodies) {\n      throw new Error(\"No request body found in spec.\");\n    }\n    return this.document.components.requestBodies;\n  }\n  getPathStrict(path) {\n    const pathItem = this.getPathsStrict()[path];\n    if (pathItem === undefined) {\n      throw new Error(`No path found for \"${path}\".`);\n    }\n    return pathItem;\n  }\n  getReferencedParameter(ref) {\n    const refComponents = ref.$ref.split(\"/\");\n    const refName = refComponents[refComponents.length - 1];\n    if (this.getParametersStrict()[refName] === undefined) {\n      throw new Error(`No parameter found for \"${refName}\".`);\n    }\n    return this.getParametersStrict()[refName];\n  }\n  getRootReferencedParameter(ref) {\n    let parameter = this.getReferencedParameter(ref);\n    while (parameter.$ref !== undefined) {\n      parameter = this.getReferencedParameter(parameter);\n    }\n    return parameter;\n  }\n  getReferencedSchema(ref) {\n    const refComponents = ref.$ref.split(\"/\");\n    const refName = refComponents[refComponents.length - 1];\n    const schema = this.getSchemasStrict()[refName];\n    if (schema === undefined) {\n      throw new Error(`No schema found for \"${refName}\".`);\n    }\n    return schema;\n  }\n  getSchema(schema) {\n    if (schema.$ref !== undefined) {\n      return this.getReferencedSchema(schema);\n    }\n    return schema;\n  }\n  getRootReferencedSchema(ref) {\n    let schema = this.getReferencedSchema(ref);\n    while (schema.$ref !== undefined) {\n      schema = this.getReferencedSchema(schema);\n    }\n    return schema;\n  }\n  getReferencedRequestBody(ref) {\n    const refComponents = ref.$ref.split(\"/\");\n    const refName = refComponents[refComponents.length - 1];\n    const requestBodies = this.getRequestBodiesStrict();\n    if (requestBodies[refName] === undefined) {\n      throw new Error(`No request body found for \"${refName}\"`);\n    }\n    return requestBodies[refName];\n  }\n  getRootReferencedRequestBody(ref) {\n    let requestBody = this.getReferencedRequestBody(ref);\n    while (requestBody.$ref !== undefined) {\n      requestBody = this.getReferencedRequestBody(requestBody);\n    }\n    return requestBody;\n  }\n  getMethodsForPath(path) {\n    const pathItem = this.getPathStrict(path);\n    // This is an enum in the underlying package.\n    // Werestate here to allow \"import type\" above and not cause warnings in certain envs.\n    const possibleMethods = [\"get\", \"put\", \"post\", \"delete\", \"options\", \"head\", \"patch\", \"trace\"];\n    return possibleMethods.filter(possibleMethod => pathItem[possibleMethod] !== undefined);\n  }\n  getParametersForPath(path) {\n    const pathItem = this.getPathStrict(path);\n    if (pathItem.parameters === undefined) {\n      return [];\n    }\n    return pathItem.parameters.map(parameter => {\n      if (parameter.$ref !== undefined) {\n        return this.getRootReferencedParameter(parameter);\n      }\n      return parameter;\n    });\n  }\n  getOperation(path, method) {\n    const pathItem = this.getPathStrict(path);\n    if (pathItem[method] === undefined) {\n      throw new Error(`No ${method} method found for \"path\".`);\n    }\n    return pathItem[method];\n  }\n  getParametersForOperation(operation) {\n    if (operation.parameters === undefined) {\n      return [];\n    }\n    return operation.parameters.map(parameter => {\n      if (parameter.$ref !== undefined) {\n        return this.getRootReferencedParameter(parameter);\n      }\n      return parameter;\n    });\n  }\n  getRequestBodyForOperation(operation) {\n    const {\n      requestBody\n    } = operation;\n    if (requestBody?.$ref !== undefined) {\n      return this.getRootReferencedRequestBody(requestBody);\n    }\n    return requestBody;\n  }\n  static getCleanedOperationId(operation, path, method) {\n    let {\n      operationId\n    } = operation;\n    if (operationId === undefined) {\n      const updatedPath = path.replaceAll(/[^a-zA-Z0-9]/, \"_\");\n      operationId = `${updatedPath.startsWith(\"/\") ? updatedPath.slice(1) : updatedPath}_${method}`;\n    }\n    return operationId.replaceAll(\"-\", \"_\").replaceAll(\".\", \"_\").replaceAll(\"/\", \"_\");\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  static alertUnsupportedSpec(document) {\n    const warningMessage = \"This may result in degraded performance. Convert your OpenAPI spec to 3.1.0 for better support.\";\n    const swaggerVersion = document.swagger;\n    const openAPIVersion = document.openapi;\n    if (openAPIVersion !== undefined && openAPIVersion !== \"3.1.0\") {\n      console.warn(`Attempting to load an OpenAPI ${openAPIVersion} spec. ${warningMessage}`);\n    } else if (swaggerVersion !== undefined) {\n      console.warn(`Attempting to load a Swagger ${swaggerVersion} spec. ${warningMessage}`);\n    } else {\n      throw new Error(`Attempting to load an unsupported spec:\\n\\n${JSON.stringify(document, null, 2)}.`);\n    }\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  static fromObject(document) {\n    OpenAPISpec.alertUnsupportedSpec(document);\n    return new OpenAPISpec(document);\n  }\n  static fromString(rawString) {\n    let document;\n    try {\n      document = JSON.parse(rawString);\n    } catch (e) {\n      document = yaml.load(rawString);\n    }\n    return OpenAPISpec.fromObject(document);\n  }\n  static async fromURL(url) {\n    const response = await fetch(url);\n    const rawDocument = await response.text();\n    return OpenAPISpec.fromString(rawDocument);\n  }\n}","map":{"version":3,"names":["yaml","OpenAPISpec","constructor","document","Object","defineProperty","enumerable","configurable","writable","value","baseUrl","servers","url","undefined","getPathsStrict","paths","Error","getParametersStrict","components","parameters","getSchemasStrict","schemas","getRequestBodiesStrict","requestBodies","getPathStrict","path","pathItem","getReferencedParameter","ref","refComponents","$ref","split","refName","length","getRootReferencedParameter","parameter","getReferencedSchema","schema","getSchema","getRootReferencedSchema","getReferencedRequestBody","getRootReferencedRequestBody","requestBody","getMethodsForPath","possibleMethods","filter","possibleMethod","getParametersForPath","map","getOperation","method","getParametersForOperation","operation","getRequestBodyForOperation","getCleanedOperationId","operationId","updatedPath","replaceAll","startsWith","slice","alertUnsupportedSpec","warningMessage","swaggerVersion","swagger","openAPIVersion","openapi","console","warn","JSON","stringify","fromObject","fromString","rawString","parse","e","load","fromURL","response","fetch","rawDocument","text"],"sources":["/Users/youngchen/Downloads/cs224g-triage/node_modules/langchain/dist/util/openapi.js"],"sourcesContent":["import * as yaml from \"js-yaml\";\nexport class OpenAPISpec {\n    constructor(document) {\n        Object.defineProperty(this, \"document\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: document\n        });\n    }\n    get baseUrl() {\n        return this.document.servers ? this.document.servers[0].url : undefined;\n    }\n    getPathsStrict() {\n        if (!this.document.paths) {\n            throw new Error(\"No paths found in spec\");\n        }\n        return this.document.paths;\n    }\n    getParametersStrict() {\n        if (!this.document.components?.parameters) {\n            throw new Error(\"No parameters found in spec\");\n        }\n        return this.document.components.parameters;\n    }\n    getSchemasStrict() {\n        if (!this.document.components?.schemas) {\n            throw new Error(\"No schemas found in spec.\");\n        }\n        return this.document.components.schemas;\n    }\n    getRequestBodiesStrict() {\n        if (!this.document.components?.requestBodies) {\n            throw new Error(\"No request body found in spec.\");\n        }\n        return this.document.components.requestBodies;\n    }\n    getPathStrict(path) {\n        const pathItem = this.getPathsStrict()[path];\n        if (pathItem === undefined) {\n            throw new Error(`No path found for \"${path}\".`);\n        }\n        return pathItem;\n    }\n    getReferencedParameter(ref) {\n        const refComponents = ref.$ref.split(\"/\");\n        const refName = refComponents[refComponents.length - 1];\n        if (this.getParametersStrict()[refName] === undefined) {\n            throw new Error(`No parameter found for \"${refName}\".`);\n        }\n        return this.getParametersStrict()[refName];\n    }\n    getRootReferencedParameter(ref) {\n        let parameter = this.getReferencedParameter(ref);\n        while (parameter.$ref !== undefined) {\n            parameter = this.getReferencedParameter(parameter);\n        }\n        return parameter;\n    }\n    getReferencedSchema(ref) {\n        const refComponents = ref.$ref.split(\"/\");\n        const refName = refComponents[refComponents.length - 1];\n        const schema = this.getSchemasStrict()[refName];\n        if (schema === undefined) {\n            throw new Error(`No schema found for \"${refName}\".`);\n        }\n        return schema;\n    }\n    getSchema(schema) {\n        if (schema.$ref !== undefined) {\n            return this.getReferencedSchema(schema);\n        }\n        return schema;\n    }\n    getRootReferencedSchema(ref) {\n        let schema = this.getReferencedSchema(ref);\n        while (schema.$ref !== undefined) {\n            schema = this.getReferencedSchema(schema);\n        }\n        return schema;\n    }\n    getReferencedRequestBody(ref) {\n        const refComponents = ref.$ref.split(\"/\");\n        const refName = refComponents[refComponents.length - 1];\n        const requestBodies = this.getRequestBodiesStrict();\n        if (requestBodies[refName] === undefined) {\n            throw new Error(`No request body found for \"${refName}\"`);\n        }\n        return requestBodies[refName];\n    }\n    getRootReferencedRequestBody(ref) {\n        let requestBody = this.getReferencedRequestBody(ref);\n        while (requestBody.$ref !== undefined) {\n            requestBody = this.getReferencedRequestBody(requestBody);\n        }\n        return requestBody;\n    }\n    getMethodsForPath(path) {\n        const pathItem = this.getPathStrict(path);\n        // This is an enum in the underlying package.\n        // Werestate here to allow \"import type\" above and not cause warnings in certain envs.\n        const possibleMethods = [\n            \"get\",\n            \"put\",\n            \"post\",\n            \"delete\",\n            \"options\",\n            \"head\",\n            \"patch\",\n            \"trace\",\n        ];\n        return possibleMethods.filter((possibleMethod) => pathItem[possibleMethod] !== undefined);\n    }\n    getParametersForPath(path) {\n        const pathItem = this.getPathStrict(path);\n        if (pathItem.parameters === undefined) {\n            return [];\n        }\n        return pathItem.parameters.map((parameter) => {\n            if (parameter.$ref !== undefined) {\n                return this.getRootReferencedParameter(parameter);\n            }\n            return parameter;\n        });\n    }\n    getOperation(path, method) {\n        const pathItem = this.getPathStrict(path);\n        if (pathItem[method] === undefined) {\n            throw new Error(`No ${method} method found for \"path\".`);\n        }\n        return pathItem[method];\n    }\n    getParametersForOperation(operation) {\n        if (operation.parameters === undefined) {\n            return [];\n        }\n        return operation.parameters.map((parameter) => {\n            if (parameter.$ref !== undefined) {\n                return this.getRootReferencedParameter(parameter);\n            }\n            return parameter;\n        });\n    }\n    getRequestBodyForOperation(operation) {\n        const { requestBody } = operation;\n        if (requestBody?.$ref !== undefined) {\n            return this.getRootReferencedRequestBody(requestBody);\n        }\n        return requestBody;\n    }\n    static getCleanedOperationId(operation, path, method) {\n        let { operationId } = operation;\n        if (operationId === undefined) {\n            const updatedPath = path.replaceAll(/[^a-zA-Z0-9]/, \"_\");\n            operationId = `${updatedPath.startsWith(\"/\") ? updatedPath.slice(1) : updatedPath}_${method}`;\n        }\n        return operationId\n            .replaceAll(\"-\", \"_\")\n            .replaceAll(\".\", \"_\")\n            .replaceAll(\"/\", \"_\");\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static alertUnsupportedSpec(document) {\n        const warningMessage = \"This may result in degraded performance. Convert your OpenAPI spec to 3.1.0 for better support.\";\n        const swaggerVersion = document.swagger;\n        const openAPIVersion = document.openapi;\n        if (openAPIVersion !== undefined && openAPIVersion !== \"3.1.0\") {\n            console.warn(`Attempting to load an OpenAPI ${openAPIVersion} spec. ${warningMessage}`);\n        }\n        else if (swaggerVersion !== undefined) {\n            console.warn(`Attempting to load a Swagger ${swaggerVersion} spec. ${warningMessage}`);\n        }\n        else {\n            throw new Error(`Attempting to load an unsupported spec:\\n\\n${JSON.stringify(document, null, 2)}.`);\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static fromObject(document) {\n        OpenAPISpec.alertUnsupportedSpec(document);\n        return new OpenAPISpec(document);\n    }\n    static fromString(rawString) {\n        let document;\n        try {\n            document = JSON.parse(rawString);\n        }\n        catch (e) {\n            document = yaml.load(rawString);\n        }\n        return OpenAPISpec.fromObject(document);\n    }\n    static async fromURL(url) {\n        const response = await fetch(url);\n        const rawDocument = await response.text();\n        return OpenAPISpec.fromString(rawDocument);\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}