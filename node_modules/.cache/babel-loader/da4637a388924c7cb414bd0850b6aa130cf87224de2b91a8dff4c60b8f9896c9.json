{"ast":null,"code":"import * as uuid from \"uuid\";\nimport { Serializable, get_lc_unique_name } from \"../load/serializable.js\";\nimport { getEnvironmentVariable } from \"../utils/env.js\";\n/**\n * Abstract class that provides a set of optional methods that can be\n * overridden in derived classes to handle various events during the\n * execution of a LangChain application.\n */\nclass BaseCallbackHandlerMethodsClass {}\nexport function callbackHandlerPrefersStreaming(x) {\n  return \"lc_prefer_streaming\" in x && x.lc_prefer_streaming;\n}\n/**\n * Abstract base class for creating callback handlers in the LangChain\n * framework. It provides a set of optional methods that can be overridden\n * in derived classes to handle various events during the execution of a\n * LangChain application.\n */\nexport class BaseCallbackHandler extends BaseCallbackHandlerMethodsClass {\n  get lc_namespace() {\n    return [\"langchain_core\", \"callbacks\", this.name];\n  }\n  get lc_secrets() {\n    return undefined;\n  }\n  get lc_attributes() {\n    return undefined;\n  }\n  get lc_aliases() {\n    return undefined;\n  }\n  /**\n   * The name of the serializable. Override to provide an alias or\n   * to preserve the serialized module name in minified environments.\n   *\n   * Implemented as a static method to support loading logic.\n   */\n  static lc_name() {\n    return this.name;\n  }\n  /**\n   * The final serialized identifier for the module.\n   */\n  get lc_id() {\n    return [...this.lc_namespace, get_lc_unique_name(this.constructor)];\n  }\n  constructor(input) {\n    super();\n    Object.defineProperty(this, \"lc_serializable\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"lc_kwargs\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"ignoreLLM\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"ignoreChain\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"ignoreAgent\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"ignoreRetriever\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"ignoreCustomEvent\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"raiseError\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"awaitHandlers\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: getEnvironmentVariable(\"LANGCHAIN_CALLBACKS_BACKGROUND\") === \"false\"\n    });\n    this.lc_kwargs = input || {};\n    if (input) {\n      this.ignoreLLM = input.ignoreLLM ?? this.ignoreLLM;\n      this.ignoreChain = input.ignoreChain ?? this.ignoreChain;\n      this.ignoreAgent = input.ignoreAgent ?? this.ignoreAgent;\n      this.ignoreRetriever = input.ignoreRetriever ?? this.ignoreRetriever;\n      this.ignoreCustomEvent = input.ignoreCustomEvent ?? this.ignoreCustomEvent;\n      this.raiseError = input.raiseError ?? this.raiseError;\n      this.awaitHandlers = this.raiseError || (input._awaitHandler ?? this.awaitHandlers);\n    }\n  }\n  copy() {\n    return new this.constructor(this);\n  }\n  toJSON() {\n    return Serializable.prototype.toJSON.call(this);\n  }\n  toJSONNotImplemented() {\n    return Serializable.prototype.toJSONNotImplemented.call(this);\n  }\n  static fromMethods(methods) {\n    class Handler extends BaseCallbackHandler {\n      constructor() {\n        super();\n        Object.defineProperty(this, \"name\", {\n          enumerable: true,\n          configurable: true,\n          writable: true,\n          value: uuid.v4()\n        });\n        Object.assign(this, methods);\n      }\n    }\n    return new Handler();\n  }\n}\nexport const isBaseCallbackHandler = x => {\n  const callbackHandler = x;\n  return callbackHandler !== undefined && typeof callbackHandler.copy === \"function\" && typeof callbackHandler.name === \"string\" && typeof callbackHandler.awaitHandlers === \"boolean\";\n};","map":{"version":3,"names":["uuid","Serializable","get_lc_unique_name","getEnvironmentVariable","BaseCallbackHandlerMethodsClass","callbackHandlerPrefersStreaming","x","lc_prefer_streaming","BaseCallbackHandler","lc_namespace","name","lc_secrets","undefined","lc_attributes","lc_aliases","lc_name","lc_id","constructor","input","Object","defineProperty","enumerable","configurable","writable","value","lc_kwargs","ignoreLLM","ignoreChain","ignoreAgent","ignoreRetriever","ignoreCustomEvent","raiseError","awaitHandlers","_awaitHandler","copy","toJSON","prototype","call","toJSONNotImplemented","fromMethods","methods","Handler","v4","assign","isBaseCallbackHandler","callbackHandler"],"sources":["/Users/youngchen/Downloads/cs224g-triage/node_modules/@langchain/core/dist/callbacks/base.js"],"sourcesContent":["import * as uuid from \"uuid\";\nimport { Serializable, get_lc_unique_name, } from \"../load/serializable.js\";\nimport { getEnvironmentVariable } from \"../utils/env.js\";\n/**\n * Abstract class that provides a set of optional methods that can be\n * overridden in derived classes to handle various events during the\n * execution of a LangChain application.\n */\nclass BaseCallbackHandlerMethodsClass {\n}\nexport function callbackHandlerPrefersStreaming(x) {\n    return \"lc_prefer_streaming\" in x && x.lc_prefer_streaming;\n}\n/**\n * Abstract base class for creating callback handlers in the LangChain\n * framework. It provides a set of optional methods that can be overridden\n * in derived classes to handle various events during the execution of a\n * LangChain application.\n */\nexport class BaseCallbackHandler extends BaseCallbackHandlerMethodsClass {\n    get lc_namespace() {\n        return [\"langchain_core\", \"callbacks\", this.name];\n    }\n    get lc_secrets() {\n        return undefined;\n    }\n    get lc_attributes() {\n        return undefined;\n    }\n    get lc_aliases() {\n        return undefined;\n    }\n    /**\n     * The name of the serializable. Override to provide an alias or\n     * to preserve the serialized module name in minified environments.\n     *\n     * Implemented as a static method to support loading logic.\n     */\n    static lc_name() {\n        return this.name;\n    }\n    /**\n     * The final serialized identifier for the module.\n     */\n    get lc_id() {\n        return [\n            ...this.lc_namespace,\n            get_lc_unique_name(this.constructor),\n        ];\n    }\n    constructor(input) {\n        super();\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"lc_kwargs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"ignoreLLM\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"ignoreChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"ignoreAgent\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"ignoreRetriever\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"ignoreCustomEvent\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"raiseError\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"awaitHandlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: getEnvironmentVariable(\"LANGCHAIN_CALLBACKS_BACKGROUND\") === \"false\"\n        });\n        this.lc_kwargs = input || {};\n        if (input) {\n            this.ignoreLLM = input.ignoreLLM ?? this.ignoreLLM;\n            this.ignoreChain = input.ignoreChain ?? this.ignoreChain;\n            this.ignoreAgent = input.ignoreAgent ?? this.ignoreAgent;\n            this.ignoreRetriever = input.ignoreRetriever ?? this.ignoreRetriever;\n            this.ignoreCustomEvent =\n                input.ignoreCustomEvent ?? this.ignoreCustomEvent;\n            this.raiseError = input.raiseError ?? this.raiseError;\n            this.awaitHandlers =\n                this.raiseError || (input._awaitHandler ?? this.awaitHandlers);\n        }\n    }\n    copy() {\n        return new this.constructor(this);\n    }\n    toJSON() {\n        return Serializable.prototype.toJSON.call(this);\n    }\n    toJSONNotImplemented() {\n        return Serializable.prototype.toJSONNotImplemented.call(this);\n    }\n    static fromMethods(methods) {\n        class Handler extends BaseCallbackHandler {\n            constructor() {\n                super();\n                Object.defineProperty(this, \"name\", {\n                    enumerable: true,\n                    configurable: true,\n                    writable: true,\n                    value: uuid.v4()\n                });\n                Object.assign(this, methods);\n            }\n        }\n        return new Handler();\n    }\n}\nexport const isBaseCallbackHandler = (x) => {\n    const callbackHandler = x;\n    return (callbackHandler !== undefined &&\n        typeof callbackHandler.copy === \"function\" &&\n        typeof callbackHandler.name === \"string\" &&\n        typeof callbackHandler.awaitHandlers === \"boolean\");\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}