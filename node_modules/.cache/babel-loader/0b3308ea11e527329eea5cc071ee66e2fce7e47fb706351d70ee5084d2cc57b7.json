{"ast":null,"code":"import { AsyncCaller } from \"./utils/async_caller.js\";\n/**\n * An abstract class that provides methods for embedding documents and\n * queries using LangChain.\n */\nexport class Embeddings {\n  constructor(params) {\n    /**\n     * The async caller should be used by subclasses to make any async calls,\n     * which will thus benefit from the concurrency and retry logic.\n     */\n    Object.defineProperty(this, \"caller\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this.caller = new AsyncCaller(params ?? {});\n  }\n}","map":{"version":3,"names":["AsyncCaller","Embeddings","constructor","params","Object","defineProperty","enumerable","configurable","writable","value","caller"],"sources":["/Users/youngchen/Downloads/cs224g-triage/node_modules/@langchain/core/dist/embeddings.js"],"sourcesContent":["import { AsyncCaller } from \"./utils/async_caller.js\";\n/**\n * An abstract class that provides methods for embedding documents and\n * queries using LangChain.\n */\nexport class Embeddings {\n    constructor(params) {\n        /**\n         * The async caller should be used by subclasses to make any async calls,\n         * which will thus benefit from the concurrency and retry logic.\n         */\n        Object.defineProperty(this, \"caller\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.caller = new AsyncCaller(params ?? {});\n    }\n}\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,yBAAyB;AACrD;AACA;AACA;AACA;AACA,OAAO,MAAMC,UAAU,CAAC;EACpBC,WAAWA,CAACC,MAAM,EAAE;IAChB;AACR;AACA;AACA;IACQC,MAAM,CAACC,cAAc,CAAC,IAAI,EAAE,QAAQ,EAAE;MAClCC,UAAU,EAAE,IAAI;MAChBC,YAAY,EAAE,IAAI;MAClBC,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAE,KAAK;IAChB,CAAC,CAAC;IACF,IAAI,CAACC,MAAM,GAAG,IAAIV,WAAW,CAACG,MAAM,IAAI,CAAC,CAAC,CAAC;EAC/C;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}