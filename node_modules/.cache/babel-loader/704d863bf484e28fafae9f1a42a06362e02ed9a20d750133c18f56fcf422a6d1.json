{"ast":null,"code":"import { BaseMessage, BaseMessageChunk, mergeContent, _mergeDicts } from \"./base.js\";\n/**\n * Represents a system message in a conversation.\n */\nexport class SystemMessage extends BaseMessage {\n  static lc_name() {\n    return \"SystemMessage\";\n  }\n  _getType() {\n    return \"system\";\n  }\n}\n/**\n * Represents a chunk of a system message, which can be concatenated with\n * other system message chunks.\n */\nexport class SystemMessageChunk extends BaseMessageChunk {\n  static lc_name() {\n    return \"SystemMessageChunk\";\n  }\n  _getType() {\n    return \"system\";\n  }\n  concat(chunk) {\n    return new SystemMessageChunk({\n      content: mergeContent(this.content, chunk.content),\n      additional_kwargs: _mergeDicts(this.additional_kwargs, chunk.additional_kwargs),\n      response_metadata: _mergeDicts(this.response_metadata, chunk.response_metadata),\n      id: this.id ?? chunk.id\n    });\n  }\n}\nexport function isSystemMessage(x) {\n  return x._getType() === \"system\";\n}\nexport function isSystemMessageChunk(x) {\n  return x._getType() === \"system\";\n}","map":{"version":3,"names":["BaseMessage","BaseMessageChunk","mergeContent","_mergeDicts","SystemMessage","lc_name","_getType","SystemMessageChunk","concat","chunk","content","additional_kwargs","response_metadata","id","isSystemMessage","x","isSystemMessageChunk"],"sources":["/Users/youngchen/Downloads/cs224g-triage/node_modules/@langchain/core/dist/messages/system.js"],"sourcesContent":["import { BaseMessage, BaseMessageChunk, mergeContent, _mergeDicts, } from \"./base.js\";\n/**\n * Represents a system message in a conversation.\n */\nexport class SystemMessage extends BaseMessage {\n    static lc_name() {\n        return \"SystemMessage\";\n    }\n    _getType() {\n        return \"system\";\n    }\n}\n/**\n * Represents a chunk of a system message, which can be concatenated with\n * other system message chunks.\n */\nexport class SystemMessageChunk extends BaseMessageChunk {\n    static lc_name() {\n        return \"SystemMessageChunk\";\n    }\n    _getType() {\n        return \"system\";\n    }\n    concat(chunk) {\n        return new SystemMessageChunk({\n            content: mergeContent(this.content, chunk.content),\n            additional_kwargs: _mergeDicts(this.additional_kwargs, chunk.additional_kwargs),\n            response_metadata: _mergeDicts(this.response_metadata, chunk.response_metadata),\n            id: this.id ?? chunk.id,\n        });\n    }\n}\nexport function isSystemMessage(x) {\n    return x._getType() === \"system\";\n}\nexport function isSystemMessageChunk(x) {\n    return x._getType() === \"system\";\n}\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,EAAEC,YAAY,EAAEC,WAAW,QAAS,WAAW;AACrF;AACA;AACA;AACA,OAAO,MAAMC,aAAa,SAASJ,WAAW,CAAC;EAC3C,OAAOK,OAAOA,CAAA,EAAG;IACb,OAAO,eAAe;EAC1B;EACAC,QAAQA,CAAA,EAAG;IACP,OAAO,QAAQ;EACnB;AACJ;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,kBAAkB,SAASN,gBAAgB,CAAC;EACrD,OAAOI,OAAOA,CAAA,EAAG;IACb,OAAO,oBAAoB;EAC/B;EACAC,QAAQA,CAAA,EAAG;IACP,OAAO,QAAQ;EACnB;EACAE,MAAMA,CAACC,KAAK,EAAE;IACV,OAAO,IAAIF,kBAAkB,CAAC;MAC1BG,OAAO,EAAER,YAAY,CAAC,IAAI,CAACQ,OAAO,EAAED,KAAK,CAACC,OAAO,CAAC;MAClDC,iBAAiB,EAAER,WAAW,CAAC,IAAI,CAACQ,iBAAiB,EAAEF,KAAK,CAACE,iBAAiB,CAAC;MAC/EC,iBAAiB,EAAET,WAAW,CAAC,IAAI,CAACS,iBAAiB,EAAEH,KAAK,CAACG,iBAAiB,CAAC;MAC/EC,EAAE,EAAE,IAAI,CAACA,EAAE,IAAIJ,KAAK,CAACI;IACzB,CAAC,CAAC;EACN;AACJ;AACA,OAAO,SAASC,eAAeA,CAACC,CAAC,EAAE;EAC/B,OAAOA,CAAC,CAACT,QAAQ,CAAC,CAAC,KAAK,QAAQ;AACpC;AACA,OAAO,SAASU,oBAAoBA,CAACD,CAAC,EAAE;EACpC,OAAOA,CAAC,CAACT,QAAQ,CAAC,CAAC,KAAK,QAAQ;AACpC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}