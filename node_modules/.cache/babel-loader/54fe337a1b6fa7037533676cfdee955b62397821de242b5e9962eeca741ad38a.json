{"ast":null,"code":"import { Runnable } from \"../runnables/base.js\";\n/**\n * Abstract base class for document transformation systems.\n *\n * A document transformation system takes an array of Documents and returns an\n * array of transformed Documents. These arrays do not necessarily have to have\n * the same length.\n *\n * One example of this is a text splitter that splits a large document into\n * many smaller documents.\n */\nexport class BaseDocumentTransformer extends Runnable {\n  constructor() {\n    super(...arguments);\n    Object.defineProperty(this, \"lc_namespace\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: [\"langchain_core\", \"documents\", \"transformers\"]\n    });\n  }\n  /**\n   * Method to invoke the document transformation. This method calls the\n   * transformDocuments method with the provided input.\n   * @param input The input documents to be transformed.\n   * @param _options Optional configuration object to customize the behavior of callbacks.\n   * @returns A Promise that resolves to the transformed documents.\n   */\n  invoke(input, _options) {\n    return this.transformDocuments(input);\n  }\n}\n/**\n * Class for document transformers that return exactly one transformed document\n * for each input document.\n */\nexport class MappingDocumentTransformer extends BaseDocumentTransformer {\n  async transformDocuments(documents) {\n    const newDocuments = [];\n    for (const document of documents) {\n      const transformedDocument = await this._transformDocument(document);\n      newDocuments.push(transformedDocument);\n    }\n    return newDocuments;\n  }\n}","map":{"version":3,"names":["Runnable","BaseDocumentTransformer","constructor","arguments","Object","defineProperty","enumerable","configurable","writable","value","invoke","input","_options","transformDocuments","MappingDocumentTransformer","documents","newDocuments","document","transformedDocument","_transformDocument","push"],"sources":["/Users/youngchen/Downloads/cs224g-triage/node_modules/@langchain/core/dist/documents/transformers.js"],"sourcesContent":["import { Runnable } from \"../runnables/base.js\";\n/**\n * Abstract base class for document transformation systems.\n *\n * A document transformation system takes an array of Documents and returns an\n * array of transformed Documents. These arrays do not necessarily have to have\n * the same length.\n *\n * One example of this is a text splitter that splits a large document into\n * many smaller documents.\n */\nexport class BaseDocumentTransformer extends Runnable {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"documents\", \"transformers\"]\n        });\n    }\n    /**\n     * Method to invoke the document transformation. This method calls the\n     * transformDocuments method with the provided input.\n     * @param input The input documents to be transformed.\n     * @param _options Optional configuration object to customize the behavior of callbacks.\n     * @returns A Promise that resolves to the transformed documents.\n     */\n    invoke(input, _options) {\n        return this.transformDocuments(input);\n    }\n}\n/**\n * Class for document transformers that return exactly one transformed document\n * for each input document.\n */\nexport class MappingDocumentTransformer extends BaseDocumentTransformer {\n    async transformDocuments(documents) {\n        const newDocuments = [];\n        for (const document of documents) {\n            const transformedDocument = await this._transformDocument(document);\n            newDocuments.push(transformedDocument);\n        }\n        return newDocuments;\n    }\n}\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,sBAAsB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,uBAAuB,SAASD,QAAQ,CAAC;EAClDE,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,GAAGC,SAAS,CAAC;IACnBC,MAAM,CAACC,cAAc,CAAC,IAAI,EAAE,cAAc,EAAE;MACxCC,UAAU,EAAE,IAAI;MAChBC,YAAY,EAAE,IAAI;MAClBC,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAE,CAAC,gBAAgB,EAAE,WAAW,EAAE,cAAc;IACzD,CAAC,CAAC;EACN;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACIC,MAAMA,CAACC,KAAK,EAAEC,QAAQ,EAAE;IACpB,OAAO,IAAI,CAACC,kBAAkB,CAACF,KAAK,CAAC;EACzC;AACJ;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMG,0BAA0B,SAASb,uBAAuB,CAAC;EACpE,MAAMY,kBAAkBA,CAACE,SAAS,EAAE;IAChC,MAAMC,YAAY,GAAG,EAAE;IACvB,KAAK,MAAMC,QAAQ,IAAIF,SAAS,EAAE;MAC9B,MAAMG,mBAAmB,GAAG,MAAM,IAAI,CAACC,kBAAkB,CAACF,QAAQ,CAAC;MACnED,YAAY,CAACI,IAAI,CAACF,mBAAmB,CAAC;IAC1C;IACA,OAAOF,YAAY;EACvB;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}