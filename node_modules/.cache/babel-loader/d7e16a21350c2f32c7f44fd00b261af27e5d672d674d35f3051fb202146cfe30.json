{"ast":null,"code":"import { BaseTransformOutputParser } from \"./transform.js\";\n/**\n * OutputParser that parses LLMResult into the top likely string and\n * encodes it into bytes.\n */\nexport class BytesOutputParser extends BaseTransformOutputParser {\n  constructor() {\n    super(...arguments);\n    Object.defineProperty(this, \"lc_namespace\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: [\"langchain_core\", \"output_parsers\", \"bytes\"]\n    });\n    Object.defineProperty(this, \"lc_serializable\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n    // TODO: Figure out why explicit typing is needed\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Object.defineProperty(this, \"textEncoder\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new TextEncoder()\n    });\n  }\n  static lc_name() {\n    return \"BytesOutputParser\";\n  }\n  parse(text) {\n    return Promise.resolve(this.textEncoder.encode(text));\n  }\n  getFormatInstructions() {\n    return \"\";\n  }\n}","map":{"version":3,"names":["BaseTransformOutputParser","BytesOutputParser","constructor","arguments","Object","defineProperty","enumerable","configurable","writable","value","TextEncoder","lc_name","parse","text","Promise","resolve","textEncoder","encode","getFormatInstructions"],"sources":["/Users/youngchen/Downloads/cs224g-triage/node_modules/@langchain/core/dist/output_parsers/bytes.js"],"sourcesContent":["import { BaseTransformOutputParser } from \"./transform.js\";\n/**\n * OutputParser that parses LLMResult into the top likely string and\n * encodes it into bytes.\n */\nexport class BytesOutputParser extends BaseTransformOutputParser {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"output_parsers\", \"bytes\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        // TODO: Figure out why explicit typing is needed\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Object.defineProperty(this, \"textEncoder\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new TextEncoder()\n        });\n    }\n    static lc_name() {\n        return \"BytesOutputParser\";\n    }\n    parse(text) {\n        return Promise.resolve(this.textEncoder.encode(text));\n    }\n    getFormatInstructions() {\n        return \"\";\n    }\n}\n"],"mappings":"AAAA,SAASA,yBAAyB,QAAQ,gBAAgB;AAC1D;AACA;AACA;AACA;AACA,OAAO,MAAMC,iBAAiB,SAASD,yBAAyB,CAAC;EAC7DE,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,GAAGC,SAAS,CAAC;IACnBC,MAAM,CAACC,cAAc,CAAC,IAAI,EAAE,cAAc,EAAE;MACxCC,UAAU,EAAE,IAAI;MAChBC,YAAY,EAAE,IAAI;MAClBC,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAE,CAAC,gBAAgB,EAAE,gBAAgB,EAAE,OAAO;IACvD,CAAC,CAAC;IACFL,MAAM,CAACC,cAAc,CAAC,IAAI,EAAE,iBAAiB,EAAE;MAC3CC,UAAU,EAAE,IAAI;MAChBC,YAAY,EAAE,IAAI;MAClBC,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAE;IACX,CAAC,CAAC;IACF;IACA;IACAL,MAAM,CAACC,cAAc,CAAC,IAAI,EAAE,aAAa,EAAE;MACvCC,UAAU,EAAE,IAAI;MAChBC,YAAY,EAAE,IAAI;MAClBC,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAE,IAAIC,WAAW,CAAC;IAC3B,CAAC,CAAC;EACN;EACA,OAAOC,OAAOA,CAAA,EAAG;IACb,OAAO,mBAAmB;EAC9B;EACAC,KAAKA,CAACC,IAAI,EAAE;IACR,OAAOC,OAAO,CAACC,OAAO,CAAC,IAAI,CAACC,WAAW,CAACC,MAAM,CAACJ,IAAI,CAAC,CAAC;EACzD;EACAK,qBAAqBA,CAAA,EAAG;IACpB,OAAO,EAAE;EACb;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}