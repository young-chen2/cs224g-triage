{"ast":null,"code":"// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isRunnableInterface(thing) {\n  return thing ? thing.lc_runnable : false;\n}\n/**\n * Utility to filter the root event in the streamEvents implementation.\n * This is simply binding the arguments to the namespace to make save on\n * a bit of typing in the streamEvents implementation.\n *\n * TODO: Refactor and remove.\n */\nexport class _RootEventFilter {\n  constructor(fields) {\n    Object.defineProperty(this, \"includeNames\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"includeTypes\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"includeTags\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"excludeNames\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"excludeTypes\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"excludeTags\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this.includeNames = fields.includeNames;\n    this.includeTypes = fields.includeTypes;\n    this.includeTags = fields.includeTags;\n    this.excludeNames = fields.excludeNames;\n    this.excludeTypes = fields.excludeTypes;\n    this.excludeTags = fields.excludeTags;\n  }\n  includeEvent(event, rootType) {\n    let include = this.includeNames === undefined && this.includeTypes === undefined && this.includeTags === undefined;\n    const eventTags = event.tags ?? [];\n    if (this.includeNames !== undefined) {\n      include = include || this.includeNames.includes(event.name);\n    }\n    if (this.includeTypes !== undefined) {\n      include = include || this.includeTypes.includes(rootType);\n    }\n    if (this.includeTags !== undefined) {\n      include = include || eventTags.some(tag => this.includeTags?.includes(tag));\n    }\n    if (this.excludeNames !== undefined) {\n      include = include && !this.excludeNames.includes(event.name);\n    }\n    if (this.excludeTypes !== undefined) {\n      include = include && !this.excludeTypes.includes(rootType);\n    }\n    if (this.excludeTags !== undefined) {\n      include = include && eventTags.every(tag => !this.excludeTags?.includes(tag));\n    }\n    return include;\n  }\n}","map":{"version":3,"names":["isRunnableInterface","thing","lc_runnable","_RootEventFilter","constructor","fields","Object","defineProperty","enumerable","configurable","writable","value","includeNames","includeTypes","includeTags","excludeNames","excludeTypes","excludeTags","includeEvent","event","rootType","include","undefined","eventTags","tags","includes","name","some","tag","every"],"sources":["/Users/youngchen/Downloads/cs224g-triage/node_modules/@langchain/core/dist/runnables/utils.js"],"sourcesContent":["// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isRunnableInterface(thing) {\n    return thing ? thing.lc_runnable : false;\n}\n/**\n * Utility to filter the root event in the streamEvents implementation.\n * This is simply binding the arguments to the namespace to make save on\n * a bit of typing in the streamEvents implementation.\n *\n * TODO: Refactor and remove.\n */\nexport class _RootEventFilter {\n    constructor(fields) {\n        Object.defineProperty(this, \"includeNames\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"includeTypes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"includeTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeNames\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeTypes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.includeNames = fields.includeNames;\n        this.includeTypes = fields.includeTypes;\n        this.includeTags = fields.includeTags;\n        this.excludeNames = fields.excludeNames;\n        this.excludeTypes = fields.excludeTypes;\n        this.excludeTags = fields.excludeTags;\n    }\n    includeEvent(event, rootType) {\n        let include = this.includeNames === undefined &&\n            this.includeTypes === undefined &&\n            this.includeTags === undefined;\n        const eventTags = event.tags ?? [];\n        if (this.includeNames !== undefined) {\n            include = include || this.includeNames.includes(event.name);\n        }\n        if (this.includeTypes !== undefined) {\n            include = include || this.includeTypes.includes(rootType);\n        }\n        if (this.includeTags !== undefined) {\n            include =\n                include || eventTags.some((tag) => this.includeTags?.includes(tag));\n        }\n        if (this.excludeNames !== undefined) {\n            include = include && !this.excludeNames.includes(event.name);\n        }\n        if (this.excludeTypes !== undefined) {\n            include = include && !this.excludeTypes.includes(rootType);\n        }\n        if (this.excludeTags !== undefined) {\n            include =\n                include && eventTags.every((tag) => !this.excludeTags?.includes(tag));\n        }\n        return include;\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}