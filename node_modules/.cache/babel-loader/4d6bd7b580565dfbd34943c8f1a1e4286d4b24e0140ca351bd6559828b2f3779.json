{"ast":null,"code":"import { parseDef } from \"../parseDef.js\";\nimport { primitiveMappings } from \"./union.js\";\nexport function parseNullableDef(def, refs) {\n  if ([\"ZodString\", \"ZodNumber\", \"ZodBigInt\", \"ZodBoolean\", \"ZodNull\"].includes(def.innerType._def.typeName) && (!def.innerType._def.checks || !def.innerType._def.checks.length)) {\n    if (refs.target === \"openApi3\") {\n      return {\n        type: primitiveMappings[def.innerType._def.typeName],\n        nullable: true\n      };\n    }\n    return {\n      type: [primitiveMappings[def.innerType._def.typeName], \"null\"]\n    };\n  }\n  if (refs.target === \"openApi3\") {\n    const base = parseDef(def.innerType._def, {\n      ...refs,\n      currentPath: [...refs.currentPath]\n    });\n    if (base && \"$ref\" in base) return {\n      allOf: [base],\n      nullable: true\n    };\n    return base && {\n      ...base,\n      nullable: true\n    };\n  }\n  const base = parseDef(def.innerType._def, {\n    ...refs,\n    currentPath: [...refs.currentPath, \"anyOf\", \"0\"]\n  });\n  return base && {\n    anyOf: [base, {\n      type: \"null\"\n    }]\n  };\n}","map":{"version":3,"names":["parseDef","primitiveMappings","parseNullableDef","def","refs","includes","innerType","_def","typeName","checks","length","target","type","nullable","base","currentPath","allOf","anyOf"],"sources":["/Users/youngchen/Downloads/cs224g-triage/node_modules/zod-to-json-schema/dist/esm/parsers/nullable.js"],"sourcesContent":["import { parseDef } from \"../parseDef.js\";\nimport { primitiveMappings } from \"./union.js\";\nexport function parseNullableDef(def, refs) {\n    if ([\"ZodString\", \"ZodNumber\", \"ZodBigInt\", \"ZodBoolean\", \"ZodNull\"].includes(def.innerType._def.typeName) &&\n        (!def.innerType._def.checks || !def.innerType._def.checks.length)) {\n        if (refs.target === \"openApi3\") {\n            return {\n                type: primitiveMappings[def.innerType._def.typeName],\n                nullable: true,\n            };\n        }\n        return {\n            type: [\n                primitiveMappings[def.innerType._def.typeName],\n                \"null\",\n            ],\n        };\n    }\n    if (refs.target === \"openApi3\") {\n        const base = parseDef(def.innerType._def, {\n            ...refs,\n            currentPath: [...refs.currentPath],\n        });\n        if (base && \"$ref\" in base)\n            return { allOf: [base], nullable: true };\n        return base && { ...base, nullable: true };\n    }\n    const base = parseDef(def.innerType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"anyOf\", \"0\"],\n    });\n    return base && { anyOf: [base, { type: \"null\" }] };\n}\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,iBAAiB,QAAQ,YAAY;AAC9C,OAAO,SAASC,gBAAgBA,CAACC,GAAG,EAAEC,IAAI,EAAE;EACxC,IAAI,CAAC,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,YAAY,EAAE,SAAS,CAAC,CAACC,QAAQ,CAACF,GAAG,CAACG,SAAS,CAACC,IAAI,CAACC,QAAQ,CAAC,KACrG,CAACL,GAAG,CAACG,SAAS,CAACC,IAAI,CAACE,MAAM,IAAI,CAACN,GAAG,CAACG,SAAS,CAACC,IAAI,CAACE,MAAM,CAACC,MAAM,CAAC,EAAE;IACnE,IAAIN,IAAI,CAACO,MAAM,KAAK,UAAU,EAAE;MAC5B,OAAO;QACHC,IAAI,EAAEX,iBAAiB,CAACE,GAAG,CAACG,SAAS,CAACC,IAAI,CAACC,QAAQ,CAAC;QACpDK,QAAQ,EAAE;MACd,CAAC;IACL;IACA,OAAO;MACHD,IAAI,EAAE,CACFX,iBAAiB,CAACE,GAAG,CAACG,SAAS,CAACC,IAAI,CAACC,QAAQ,CAAC,EAC9C,MAAM;IAEd,CAAC;EACL;EACA,IAAIJ,IAAI,CAACO,MAAM,KAAK,UAAU,EAAE;IAC5B,MAAMG,IAAI,GAAGd,QAAQ,CAACG,GAAG,CAACG,SAAS,CAACC,IAAI,EAAE;MACtC,GAAGH,IAAI;MACPW,WAAW,EAAE,CAAC,GAAGX,IAAI,CAACW,WAAW;IACrC,CAAC,CAAC;IACF,IAAID,IAAI,IAAI,MAAM,IAAIA,IAAI,EACtB,OAAO;MAAEE,KAAK,EAAE,CAACF,IAAI,CAAC;MAAED,QAAQ,EAAE;IAAK,CAAC;IAC5C,OAAOC,IAAI,IAAI;MAAE,GAAGA,IAAI;MAAED,QAAQ,EAAE;IAAK,CAAC;EAC9C;EACA,MAAMC,IAAI,GAAGd,QAAQ,CAACG,GAAG,CAACG,SAAS,CAACC,IAAI,EAAE;IACtC,GAAGH,IAAI;IACPW,WAAW,EAAE,CAAC,GAAGX,IAAI,CAACW,WAAW,EAAE,OAAO,EAAE,GAAG;EACnD,CAAC,CAAC;EACF,OAAOD,IAAI,IAAI;IAAEG,KAAK,EAAE,CAACH,IAAI,EAAE;MAAEF,IAAI,EAAE;IAAO,CAAC;EAAE,CAAC;AACtD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}