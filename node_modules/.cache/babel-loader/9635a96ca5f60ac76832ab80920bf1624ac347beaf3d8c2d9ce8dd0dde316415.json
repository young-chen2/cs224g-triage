{"ast":null,"code":"import { BaseMessage, BaseMessageChunk, mergeContent, _mergeDicts } from \"./base.js\";\n/**\n * Represents a chat message in a conversation.\n */\nexport class ChatMessage extends BaseMessage {\n  static lc_name() {\n    return \"ChatMessage\";\n  }\n  static _chatMessageClass() {\n    return ChatMessage;\n  }\n  constructor(fields, role) {\n    if (typeof fields === \"string\") {\n      // eslint-disable-next-line no-param-reassign, @typescript-eslint/no-non-null-assertion\n      fields = {\n        content: fields,\n        role: role\n      };\n    }\n    super(fields);\n    Object.defineProperty(this, \"role\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this.role = fields.role;\n  }\n  _getType() {\n    return \"generic\";\n  }\n  static isInstance(message) {\n    return message._getType() === \"generic\";\n  }\n  get _printableFields() {\n    return {\n      ...super._printableFields,\n      role: this.role\n    };\n  }\n}\n/**\n * Represents a chunk of a chat message, which can be concatenated with\n * other chat message chunks.\n */\nexport class ChatMessageChunk extends BaseMessageChunk {\n  static lc_name() {\n    return \"ChatMessageChunk\";\n  }\n  constructor(fields, role) {\n    if (typeof fields === \"string\") {\n      // eslint-disable-next-line no-param-reassign, @typescript-eslint/no-non-null-assertion\n      fields = {\n        content: fields,\n        role: role\n      };\n    }\n    super(fields);\n    Object.defineProperty(this, \"role\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this.role = fields.role;\n  }\n  _getType() {\n    return \"generic\";\n  }\n  concat(chunk) {\n    return new ChatMessageChunk({\n      content: mergeContent(this.content, chunk.content),\n      additional_kwargs: _mergeDicts(this.additional_kwargs, chunk.additional_kwargs),\n      response_metadata: _mergeDicts(this.response_metadata, chunk.response_metadata),\n      role: this.role,\n      id: this.id ?? chunk.id\n    });\n  }\n  get _printableFields() {\n    return {\n      ...super._printableFields,\n      role: this.role\n    };\n  }\n}\nexport function isChatMessage(x) {\n  return x._getType() === \"generic\";\n}\nexport function isChatMessageChunk(x) {\n  return x._getType() === \"generic\";\n}","map":{"version":3,"names":["BaseMessage","BaseMessageChunk","mergeContent","_mergeDicts","ChatMessage","lc_name","_chatMessageClass","constructor","fields","role","content","Object","defineProperty","enumerable","configurable","writable","value","_getType","isInstance","message","_printableFields","ChatMessageChunk","concat","chunk","additional_kwargs","response_metadata","id","isChatMessage","x","isChatMessageChunk"],"sources":["/Users/youngchen/Downloads/cs224g-triage/node_modules/@langchain/core/dist/messages/chat.js"],"sourcesContent":["import { BaseMessage, BaseMessageChunk, mergeContent, _mergeDicts, } from \"./base.js\";\n/**\n * Represents a chat message in a conversation.\n */\nexport class ChatMessage extends BaseMessage {\n    static lc_name() {\n        return \"ChatMessage\";\n    }\n    static _chatMessageClass() {\n        return ChatMessage;\n    }\n    constructor(fields, role) {\n        if (typeof fields === \"string\") {\n            // eslint-disable-next-line no-param-reassign, @typescript-eslint/no-non-null-assertion\n            fields = { content: fields, role: role };\n        }\n        super(fields);\n        Object.defineProperty(this, \"role\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.role = fields.role;\n    }\n    _getType() {\n        return \"generic\";\n    }\n    static isInstance(message) {\n        return message._getType() === \"generic\";\n    }\n    get _printableFields() {\n        return {\n            ...super._printableFields,\n            role: this.role,\n        };\n    }\n}\n/**\n * Represents a chunk of a chat message, which can be concatenated with\n * other chat message chunks.\n */\nexport class ChatMessageChunk extends BaseMessageChunk {\n    static lc_name() {\n        return \"ChatMessageChunk\";\n    }\n    constructor(fields, role) {\n        if (typeof fields === \"string\") {\n            // eslint-disable-next-line no-param-reassign, @typescript-eslint/no-non-null-assertion\n            fields = { content: fields, role: role };\n        }\n        super(fields);\n        Object.defineProperty(this, \"role\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.role = fields.role;\n    }\n    _getType() {\n        return \"generic\";\n    }\n    concat(chunk) {\n        return new ChatMessageChunk({\n            content: mergeContent(this.content, chunk.content),\n            additional_kwargs: _mergeDicts(this.additional_kwargs, chunk.additional_kwargs),\n            response_metadata: _mergeDicts(this.response_metadata, chunk.response_metadata),\n            role: this.role,\n            id: this.id ?? chunk.id,\n        });\n    }\n    get _printableFields() {\n        return {\n            ...super._printableFields,\n            role: this.role,\n        };\n    }\n}\nexport function isChatMessage(x) {\n    return x._getType() === \"generic\";\n}\nexport function isChatMessageChunk(x) {\n    return x._getType() === \"generic\";\n}\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,EAAEC,YAAY,EAAEC,WAAW,QAAS,WAAW;AACrF;AACA;AACA;AACA,OAAO,MAAMC,WAAW,SAASJ,WAAW,CAAC;EACzC,OAAOK,OAAOA,CAAA,EAAG;IACb,OAAO,aAAa;EACxB;EACA,OAAOC,iBAAiBA,CAAA,EAAG;IACvB,OAAOF,WAAW;EACtB;EACAG,WAAWA,CAACC,MAAM,EAAEC,IAAI,EAAE;IACtB,IAAI,OAAOD,MAAM,KAAK,QAAQ,EAAE;MAC5B;MACAA,MAAM,GAAG;QAAEE,OAAO,EAAEF,MAAM;QAAEC,IAAI,EAAEA;MAAK,CAAC;IAC5C;IACA,KAAK,CAACD,MAAM,CAAC;IACbG,MAAM,CAACC,cAAc,CAAC,IAAI,EAAE,MAAM,EAAE;MAChCC,UAAU,EAAE,IAAI;MAChBC,YAAY,EAAE,IAAI;MAClBC,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAE,KAAK;IAChB,CAAC,CAAC;IACF,IAAI,CAACP,IAAI,GAAGD,MAAM,CAACC,IAAI;EAC3B;EACAQ,QAAQA,CAAA,EAAG;IACP,OAAO,SAAS;EACpB;EACA,OAAOC,UAAUA,CAACC,OAAO,EAAE;IACvB,OAAOA,OAAO,CAACF,QAAQ,CAAC,CAAC,KAAK,SAAS;EAC3C;EACA,IAAIG,gBAAgBA,CAAA,EAAG;IACnB,OAAO;MACH,GAAG,KAAK,CAACA,gBAAgB;MACzBX,IAAI,EAAE,IAAI,CAACA;IACf,CAAC;EACL;AACJ;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMY,gBAAgB,SAASpB,gBAAgB,CAAC;EACnD,OAAOI,OAAOA,CAAA,EAAG;IACb,OAAO,kBAAkB;EAC7B;EACAE,WAAWA,CAACC,MAAM,EAAEC,IAAI,EAAE;IACtB,IAAI,OAAOD,MAAM,KAAK,QAAQ,EAAE;MAC5B;MACAA,MAAM,GAAG;QAAEE,OAAO,EAAEF,MAAM;QAAEC,IAAI,EAAEA;MAAK,CAAC;IAC5C;IACA,KAAK,CAACD,MAAM,CAAC;IACbG,MAAM,CAACC,cAAc,CAAC,IAAI,EAAE,MAAM,EAAE;MAChCC,UAAU,EAAE,IAAI;MAChBC,YAAY,EAAE,IAAI;MAClBC,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAE,KAAK;IAChB,CAAC,CAAC;IACF,IAAI,CAACP,IAAI,GAAGD,MAAM,CAACC,IAAI;EAC3B;EACAQ,QAAQA,CAAA,EAAG;IACP,OAAO,SAAS;EACpB;EACAK,MAAMA,CAACC,KAAK,EAAE;IACV,OAAO,IAAIF,gBAAgB,CAAC;MACxBX,OAAO,EAAER,YAAY,CAAC,IAAI,CAACQ,OAAO,EAAEa,KAAK,CAACb,OAAO,CAAC;MAClDc,iBAAiB,EAAErB,WAAW,CAAC,IAAI,CAACqB,iBAAiB,EAAED,KAAK,CAACC,iBAAiB,CAAC;MAC/EC,iBAAiB,EAAEtB,WAAW,CAAC,IAAI,CAACsB,iBAAiB,EAAEF,KAAK,CAACE,iBAAiB,CAAC;MAC/EhB,IAAI,EAAE,IAAI,CAACA,IAAI;MACfiB,EAAE,EAAE,IAAI,CAACA,EAAE,IAAIH,KAAK,CAACG;IACzB,CAAC,CAAC;EACN;EACA,IAAIN,gBAAgBA,CAAA,EAAG;IACnB,OAAO;MACH,GAAG,KAAK,CAACA,gBAAgB;MACzBX,IAAI,EAAE,IAAI,CAACA;IACf,CAAC;EACL;AACJ;AACA,OAAO,SAASkB,aAAaA,CAACC,CAAC,EAAE;EAC7B,OAAOA,CAAC,CAACX,QAAQ,CAAC,CAAC,KAAK,SAAS;AACrC;AACA,OAAO,SAASY,kBAAkBA,CAACD,CAAC,EAAE;EAClC,OAAOA,CAAC,CAACX,QAAQ,CAAC,CAAC,KAAK,SAAS;AACrC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}