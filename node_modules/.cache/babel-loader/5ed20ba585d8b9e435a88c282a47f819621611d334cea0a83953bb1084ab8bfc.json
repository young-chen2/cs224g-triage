{"ast":null,"code":"// @ts-nocheck\n// Inlined because of ESM import issues\n/*!\n * https://github.com/Starcounter-Jack/JSON-Patch\n * (c) 2017-2022 Joachim Wester\n * MIT licensed\n */\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\nexport function hasOwnProperty(obj, key) {\n  return _hasOwnProperty.call(obj, key);\n}\nexport function _objectKeys(obj) {\n  if (Array.isArray(obj)) {\n    const keys = new Array(obj.length);\n    for (let k = 0; k < keys.length; k++) {\n      keys[k] = \"\" + k;\n    }\n    return keys;\n  }\n  if (Object.keys) {\n    return Object.keys(obj);\n  }\n  let keys = [];\n  for (let i in obj) {\n    if (hasOwnProperty(obj, i)) {\n      keys.push(i);\n    }\n  }\n  return keys;\n}\n/**\n * Deeply clone the object.\n * https://jsperf.com/deep-copy-vs-json-stringify-json-parse/25 (recursiveDeepCopy)\n * @param  {any} obj value to clone\n * @return {any} cloned obj\n */\nexport function _deepClone(obj) {\n  switch (typeof obj) {\n    case \"object\":\n      return JSON.parse(JSON.stringify(obj));\n    //Faster than ES5 clone - http://jsperf.com/deep-cloning-of-objects/5\n    case \"undefined\":\n      return null;\n    //this is how JSON.stringify behaves for array items\n    default:\n      return obj;\n    //no need to clone primitives\n  }\n}\n//3x faster than cached /^\\d+$/.test(str)\nexport function isInteger(str) {\n  let i = 0;\n  const len = str.length;\n  let charCode;\n  while (i < len) {\n    charCode = str.charCodeAt(i);\n    if (charCode >= 48 && charCode <= 57) {\n      i++;\n      continue;\n    }\n    return false;\n  }\n  return true;\n}\n/**\n * Escapes a json pointer path\n * @param path The raw pointer\n * @return the Escaped path\n */\nexport function escapePathComponent(path) {\n  if (path.indexOf(\"/\") === -1 && path.indexOf(\"~\") === -1) return path;\n  return path.replace(/~/g, \"~0\").replace(/\\//g, \"~1\");\n}\n/**\n * Unescapes a json pointer path\n * @param path The escaped pointer\n * @return The unescaped path\n */\nexport function unescapePathComponent(path) {\n  return path.replace(/~1/g, \"/\").replace(/~0/g, \"~\");\n}\nexport function _getPathRecursive(root, obj) {\n  let found;\n  for (let key in root) {\n    if (hasOwnProperty(root, key)) {\n      if (root[key] === obj) {\n        return escapePathComponent(key) + \"/\";\n      } else if (typeof root[key] === \"object\") {\n        found = _getPathRecursive(root[key], obj);\n        if (found != \"\") {\n          return escapePathComponent(key) + \"/\" + found;\n        }\n      }\n    }\n  }\n  return \"\";\n}\nexport function getPath(root, obj) {\n  if (root === obj) {\n    return \"/\";\n  }\n  const path = _getPathRecursive(root, obj);\n  if (path === \"\") {\n    throw new Error(\"Object not found in root\");\n  }\n  return `/${path}`;\n}\n/**\n * Recursively checks whether an object has any undefined values inside.\n */\nexport function hasUndefined(obj) {\n  if (obj === undefined) {\n    return true;\n  }\n  if (obj) {\n    if (Array.isArray(obj)) {\n      for (let i = 0, len = obj.length; i < len; i++) {\n        if (hasUndefined(obj[i])) {\n          return true;\n        }\n      }\n    } else if (typeof obj === \"object\") {\n      const objKeys = _objectKeys(obj);\n      const objKeysLength = objKeys.length;\n      for (var i = 0; i < objKeysLength; i++) {\n        if (hasUndefined(obj[objKeys[i]])) {\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n}\nfunction patchErrorMessageFormatter(message, args) {\n  const messageParts = [message];\n  for (const key in args) {\n    const value = typeof args[key] === \"object\" ? JSON.stringify(args[key], null, 2) : args[key]; // pretty print\n    if (typeof value !== \"undefined\") {\n      messageParts.push(`${key}: ${value}`);\n    }\n  }\n  return messageParts.join(\"\\n\");\n}\nexport class PatchError extends Error {\n  constructor(message, name, index, operation, tree) {\n    super(patchErrorMessageFormatter(message, {\n      name,\n      index,\n      operation,\n      tree\n    }));\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: name\n    });\n    Object.defineProperty(this, \"index\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: index\n    });\n    Object.defineProperty(this, \"operation\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: operation\n    });\n    Object.defineProperty(this, \"tree\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: tree\n    });\n    Object.setPrototypeOf(this, new.target.prototype); // restore prototype chain, see https://stackoverflow.com/a/48342359\n    this.message = patchErrorMessageFormatter(message, {\n      name,\n      index,\n      operation,\n      tree\n    });\n  }\n}","map":{"version":3,"names":["_hasOwnProperty","Object","prototype","hasOwnProperty","obj","key","call","_objectKeys","Array","isArray","keys","length","k","i","push","_deepClone","JSON","parse","stringify","isInteger","str","len","charCode","charCodeAt","escapePathComponent","path","indexOf","replace","unescapePathComponent","_getPathRecursive","root","found","getPath","Error","hasUndefined","undefined","objKeys","objKeysLength","patchErrorMessageFormatter","message","args","messageParts","value","join","PatchError","constructor","name","index","operation","tree","defineProperty","enumerable","configurable","writable","setPrototypeOf","new","target"],"sources":["/Users/youngchen/Downloads/cs224g-triage/node_modules/@langchain/core/dist/utils/fast-json-patch/src/helpers.js"],"sourcesContent":["// @ts-nocheck\n// Inlined because of ESM import issues\n/*!\n * https://github.com/Starcounter-Jack/JSON-Patch\n * (c) 2017-2022 Joachim Wester\n * MIT licensed\n */\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\nexport function hasOwnProperty(obj, key) {\n    return _hasOwnProperty.call(obj, key);\n}\nexport function _objectKeys(obj) {\n    if (Array.isArray(obj)) {\n        const keys = new Array(obj.length);\n        for (let k = 0; k < keys.length; k++) {\n            keys[k] = \"\" + k;\n        }\n        return keys;\n    }\n    if (Object.keys) {\n        return Object.keys(obj);\n    }\n    let keys = [];\n    for (let i in obj) {\n        if (hasOwnProperty(obj, i)) {\n            keys.push(i);\n        }\n    }\n    return keys;\n}\n/**\n * Deeply clone the object.\n * https://jsperf.com/deep-copy-vs-json-stringify-json-parse/25 (recursiveDeepCopy)\n * @param  {any} obj value to clone\n * @return {any} cloned obj\n */\nexport function _deepClone(obj) {\n    switch (typeof obj) {\n        case \"object\":\n            return JSON.parse(JSON.stringify(obj)); //Faster than ES5 clone - http://jsperf.com/deep-cloning-of-objects/5\n        case \"undefined\":\n            return null; //this is how JSON.stringify behaves for array items\n        default:\n            return obj; //no need to clone primitives\n    }\n}\n//3x faster than cached /^\\d+$/.test(str)\nexport function isInteger(str) {\n    let i = 0;\n    const len = str.length;\n    let charCode;\n    while (i < len) {\n        charCode = str.charCodeAt(i);\n        if (charCode >= 48 && charCode <= 57) {\n            i++;\n            continue;\n        }\n        return false;\n    }\n    return true;\n}\n/**\n * Escapes a json pointer path\n * @param path The raw pointer\n * @return the Escaped path\n */\nexport function escapePathComponent(path) {\n    if (path.indexOf(\"/\") === -1 && path.indexOf(\"~\") === -1)\n        return path;\n    return path.replace(/~/g, \"~0\").replace(/\\//g, \"~1\");\n}\n/**\n * Unescapes a json pointer path\n * @param path The escaped pointer\n * @return The unescaped path\n */\nexport function unescapePathComponent(path) {\n    return path.replace(/~1/g, \"/\").replace(/~0/g, \"~\");\n}\nexport function _getPathRecursive(root, obj) {\n    let found;\n    for (let key in root) {\n        if (hasOwnProperty(root, key)) {\n            if (root[key] === obj) {\n                return escapePathComponent(key) + \"/\";\n            }\n            else if (typeof root[key] === \"object\") {\n                found = _getPathRecursive(root[key], obj);\n                if (found != \"\") {\n                    return escapePathComponent(key) + \"/\" + found;\n                }\n            }\n        }\n    }\n    return \"\";\n}\nexport function getPath(root, obj) {\n    if (root === obj) {\n        return \"/\";\n    }\n    const path = _getPathRecursive(root, obj);\n    if (path === \"\") {\n        throw new Error(\"Object not found in root\");\n    }\n    return `/${path}`;\n}\n/**\n * Recursively checks whether an object has any undefined values inside.\n */\nexport function hasUndefined(obj) {\n    if (obj === undefined) {\n        return true;\n    }\n    if (obj) {\n        if (Array.isArray(obj)) {\n            for (let i = 0, len = obj.length; i < len; i++) {\n                if (hasUndefined(obj[i])) {\n                    return true;\n                }\n            }\n        }\n        else if (typeof obj === \"object\") {\n            const objKeys = _objectKeys(obj);\n            const objKeysLength = objKeys.length;\n            for (var i = 0; i < objKeysLength; i++) {\n                if (hasUndefined(obj[objKeys[i]])) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}\nfunction patchErrorMessageFormatter(message, args) {\n    const messageParts = [message];\n    for (const key in args) {\n        const value = typeof args[key] === \"object\"\n            ? JSON.stringify(args[key], null, 2)\n            : args[key]; // pretty print\n        if (typeof value !== \"undefined\") {\n            messageParts.push(`${key}: ${value}`);\n        }\n    }\n    return messageParts.join(\"\\n\");\n}\nexport class PatchError extends Error {\n    constructor(message, name, index, operation, tree) {\n        super(patchErrorMessageFormatter(message, { name, index, operation, tree }));\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: name\n        });\n        Object.defineProperty(this, \"index\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: index\n        });\n        Object.defineProperty(this, \"operation\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: operation\n        });\n        Object.defineProperty(this, \"tree\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: tree\n        });\n        Object.setPrototypeOf(this, new.target.prototype); // restore prototype chain, see https://stackoverflow.com/a/48342359\n        this.message = patchErrorMessageFormatter(message, {\n            name,\n            index,\n            operation,\n            tree,\n        });\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}