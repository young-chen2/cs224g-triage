{"ast":null,"code":"export function parseNativeEnumDef(def) {\n  const object = def.values;\n  const actualKeys = Object.keys(def.values).filter(key => {\n    return typeof object[object[key]] !== \"number\";\n  });\n  const actualValues = actualKeys.map(key => object[key]);\n  const parsedTypes = Array.from(new Set(actualValues.map(values => typeof values)));\n  return {\n    type: parsedTypes.length === 1 ? parsedTypes[0] === \"string\" ? \"string\" : \"number\" : [\"string\", \"number\"],\n    enum: actualValues\n  };\n}","map":{"version":3,"names":["parseNativeEnumDef","def","object","values","actualKeys","Object","keys","filter","key","actualValues","map","parsedTypes","Array","from","Set","type","length","enum"],"sources":["/Users/youngchen/Downloads/cs224g-triage/node_modules/zod-to-json-schema/dist/esm/parsers/nativeEnum.js"],"sourcesContent":["export function parseNativeEnumDef(def) {\n    const object = def.values;\n    const actualKeys = Object.keys(def.values).filter((key) => {\n        return typeof object[object[key]] !== \"number\";\n    });\n    const actualValues = actualKeys.map((key) => object[key]);\n    const parsedTypes = Array.from(new Set(actualValues.map((values) => typeof values)));\n    return {\n        type: parsedTypes.length === 1\n            ? parsedTypes[0] === \"string\"\n                ? \"string\"\n                : \"number\"\n            : [\"string\", \"number\"],\n        enum: actualValues,\n    };\n}\n"],"mappings":"AAAA,OAAO,SAASA,kBAAkBA,CAACC,GAAG,EAAE;EACpC,MAAMC,MAAM,GAAGD,GAAG,CAACE,MAAM;EACzB,MAAMC,UAAU,GAAGC,MAAM,CAACC,IAAI,CAACL,GAAG,CAACE,MAAM,CAAC,CAACI,MAAM,CAAEC,GAAG,IAAK;IACvD,OAAO,OAAON,MAAM,CAACA,MAAM,CAACM,GAAG,CAAC,CAAC,KAAK,QAAQ;EAClD,CAAC,CAAC;EACF,MAAMC,YAAY,GAAGL,UAAU,CAACM,GAAG,CAAEF,GAAG,IAAKN,MAAM,CAACM,GAAG,CAAC,CAAC;EACzD,MAAMG,WAAW,GAAGC,KAAK,CAACC,IAAI,CAAC,IAAIC,GAAG,CAACL,YAAY,CAACC,GAAG,CAAEP,MAAM,IAAK,OAAOA,MAAM,CAAC,CAAC,CAAC;EACpF,OAAO;IACHY,IAAI,EAAEJ,WAAW,CAACK,MAAM,KAAK,CAAC,GACxBL,WAAW,CAAC,CAAC,CAAC,KAAK,QAAQ,GACvB,QAAQ,GACR,QAAQ,GACZ,CAAC,QAAQ,EAAE,QAAQ,CAAC;IAC1BM,IAAI,EAAER;EACV,CAAC;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}