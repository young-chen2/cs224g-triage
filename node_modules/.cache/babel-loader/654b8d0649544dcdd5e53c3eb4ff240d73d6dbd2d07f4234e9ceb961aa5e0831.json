{"ast":null,"code":"import { IterableReadableStream } from \"../utils/stream.js\";\nexport function convertToHttpEventStream(stream) {\n  const encoder = new TextEncoder();\n  const finalStream = new ReadableStream({\n    async start(controller) {\n      for await (const chunk of stream) {\n        controller.enqueue(encoder.encode(`event: data\\ndata: ${JSON.stringify(chunk)}\\n\\n`));\n      }\n      controller.enqueue(encoder.encode(\"event: end\\n\\n\"));\n      controller.close();\n    }\n  });\n  return IterableReadableStream.fromReadableStream(finalStream);\n}","map":{"version":3,"names":["IterableReadableStream","convertToHttpEventStream","stream","encoder","TextEncoder","finalStream","ReadableStream","start","controller","chunk","enqueue","encode","JSON","stringify","close","fromReadableStream"],"sources":["/Users/youngchen/Downloads/cs224g-triage/node_modules/@langchain/core/dist/runnables/wrappers.js"],"sourcesContent":["import { IterableReadableStream } from \"../utils/stream.js\";\nexport function convertToHttpEventStream(stream) {\n    const encoder = new TextEncoder();\n    const finalStream = new ReadableStream({\n        async start(controller) {\n            for await (const chunk of stream) {\n                controller.enqueue(encoder.encode(`event: data\\ndata: ${JSON.stringify(chunk)}\\n\\n`));\n            }\n            controller.enqueue(encoder.encode(\"event: end\\n\\n\"));\n            controller.close();\n        },\n    });\n    return IterableReadableStream.fromReadableStream(finalStream);\n}\n"],"mappings":"AAAA,SAASA,sBAAsB,QAAQ,oBAAoB;AAC3D,OAAO,SAASC,wBAAwBA,CAACC,MAAM,EAAE;EAC7C,MAAMC,OAAO,GAAG,IAAIC,WAAW,CAAC,CAAC;EACjC,MAAMC,WAAW,GAAG,IAAIC,cAAc,CAAC;IACnC,MAAMC,KAAKA,CAACC,UAAU,EAAE;MACpB,WAAW,MAAMC,KAAK,IAAIP,MAAM,EAAE;QAC9BM,UAAU,CAACE,OAAO,CAACP,OAAO,CAACQ,MAAM,CAAC,sBAAsBC,IAAI,CAACC,SAAS,CAACJ,KAAK,CAAC,MAAM,CAAC,CAAC;MACzF;MACAD,UAAU,CAACE,OAAO,CAACP,OAAO,CAACQ,MAAM,CAAC,gBAAgB,CAAC,CAAC;MACpDH,UAAU,CAACM,KAAK,CAAC,CAAC;IACtB;EACJ,CAAC,CAAC;EACF,OAAOd,sBAAsB,CAACe,kBAAkB,CAACV,WAAW,CAAC;AACjE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}