{"ast":null,"code":"import { parseDef } from \"../parseDef.mjs\";\nexport const primitiveMappings = {\n  ZodString: 'string',\n  ZodNumber: 'number',\n  ZodBigInt: 'integer',\n  ZodBoolean: 'boolean',\n  ZodNull: 'null'\n};\nexport function parseUnionDef(def, refs) {\n  if (refs.target === 'openApi3') return asAnyOf(def, refs);\n  const options = def.options instanceof Map ? Array.from(def.options.values()) : def.options;\n  // This blocks tries to look ahead a bit to produce nicer looking schemas with type array instead of anyOf.\n  if (options.every(x => x._def.typeName in primitiveMappings && (!x._def.checks || !x._def.checks.length))) {\n    // all types in union are primitive and lack checks, so might as well squash into {type: [...]}\n    const types = options.reduce((types, x) => {\n      const type = primitiveMappings[x._def.typeName]; //Can be safely casted due to row 43\n      return type && !types.includes(type) ? [...types, type] : types;\n    }, []);\n    return {\n      type: types.length > 1 ? types : types[0]\n    };\n  } else if (options.every(x => x._def.typeName === 'ZodLiteral' && !x.description)) {\n    // all options literals\n    const types = options.reduce((acc, x) => {\n      const type = typeof x._def.value;\n      switch (type) {\n        case 'string':\n        case 'number':\n        case 'boolean':\n          return [...acc, type];\n        case 'bigint':\n          return [...acc, 'integer'];\n        case 'object':\n          if (x._def.value === null) return [...acc, 'null'];\n        case 'symbol':\n        case 'undefined':\n        case 'function':\n        default:\n          return acc;\n      }\n    }, []);\n    if (types.length === options.length) {\n      // all the literals are primitive, as far as null can be considered primitive\n      const uniqueTypes = types.filter((x, i, a) => a.indexOf(x) === i);\n      return {\n        type: uniqueTypes.length > 1 ? uniqueTypes : uniqueTypes[0],\n        enum: options.reduce((acc, x) => {\n          return acc.includes(x._def.value) ? acc : [...acc, x._def.value];\n        }, [])\n      };\n    }\n  } else if (options.every(x => x._def.typeName === 'ZodEnum')) {\n    return {\n      type: 'string',\n      enum: options.reduce((acc, x) => [...acc, ...x._def.values.filter(x => !acc.includes(x))], [])\n    };\n  }\n  return asAnyOf(def, refs);\n}\nconst asAnyOf = (def, refs) => {\n  const anyOf = (def.options instanceof Map ? Array.from(def.options.values()) : def.options).map((x, i) => parseDef(x._def, {\n    ...refs,\n    currentPath: [...refs.currentPath, 'anyOf', `${i}`]\n  })).filter(x => !!x && (!refs.strictUnions || typeof x === 'object' && Object.keys(x).length > 0));\n  return anyOf.length ? {\n    anyOf\n  } : undefined;\n};","map":{"version":3,"names":["parseDef","primitiveMappings","ZodString","ZodNumber","ZodBigInt","ZodBoolean","ZodNull","parseUnionDef","def","refs","target","asAnyOf","options","Map","Array","from","values","every","x","_def","typeName","checks","length","types","reduce","type","includes","description","acc","value","uniqueTypes","filter","i","a","indexOf","enum","anyOf","map","currentPath","strictUnions","Object","keys","undefined"],"sources":["/Users/youngchen/Downloads/cs224g-triage/node_modules/openai/src/_vendor/zod-to-json-schema/parsers/union.ts"],"sourcesContent":["import { ZodDiscriminatedUnionDef, ZodLiteralDef, ZodTypeAny, ZodUnionDef } from 'zod';\nimport { JsonSchema7Type, parseDef } from '../parseDef';\nimport { Refs } from '../Refs';\n\nexport const primitiveMappings = {\n  ZodString: 'string',\n  ZodNumber: 'number',\n  ZodBigInt: 'integer',\n  ZodBoolean: 'boolean',\n  ZodNull: 'null',\n} as const;\ntype ZodPrimitive = keyof typeof primitiveMappings;\ntype JsonSchema7Primitive = (typeof primitiveMappings)[keyof typeof primitiveMappings];\n\nexport type JsonSchema7UnionType = JsonSchema7PrimitiveUnionType | JsonSchema7AnyOfType;\n\ntype JsonSchema7PrimitiveUnionType =\n  | {\n      type: JsonSchema7Primitive | JsonSchema7Primitive[];\n    }\n  | {\n      type: JsonSchema7Primitive | JsonSchema7Primitive[];\n      enum: (string | number | bigint | boolean | null)[];\n    };\n\ntype JsonSchema7AnyOfType = {\n  anyOf: JsonSchema7Type[];\n};\n\nexport function parseUnionDef(\n  def: ZodUnionDef | ZodDiscriminatedUnionDef<any, any>,\n  refs: Refs,\n): JsonSchema7PrimitiveUnionType | JsonSchema7AnyOfType | undefined {\n  if (refs.target === 'openApi3') return asAnyOf(def, refs);\n\n  const options: readonly ZodTypeAny[] =\n    def.options instanceof Map ? Array.from(def.options.values()) : def.options;\n\n  // This blocks tries to look ahead a bit to produce nicer looking schemas with type array instead of anyOf.\n  if (\n    options.every((x) => x._def.typeName in primitiveMappings && (!x._def.checks || !x._def.checks.length))\n  ) {\n    // all types in union are primitive and lack checks, so might as well squash into {type: [...]}\n\n    const types = options.reduce((types: JsonSchema7Primitive[], x) => {\n      const type = primitiveMappings[x._def.typeName as ZodPrimitive]; //Can be safely casted due to row 43\n      return type && !types.includes(type) ? [...types, type] : types;\n    }, []);\n\n    return {\n      type: types.length > 1 ? types : types[0]!,\n    };\n  } else if (options.every((x) => x._def.typeName === 'ZodLiteral' && !x.description)) {\n    // all options literals\n\n    const types = options.reduce((acc: JsonSchema7Primitive[], x: { _def: ZodLiteralDef }) => {\n      const type = typeof x._def.value;\n      switch (type) {\n        case 'string':\n        case 'number':\n        case 'boolean':\n          return [...acc, type];\n        case 'bigint':\n          return [...acc, 'integer' as const];\n        case 'object':\n          if (x._def.value === null) return [...acc, 'null' as const];\n        case 'symbol':\n        case 'undefined':\n        case 'function':\n        default:\n          return acc;\n      }\n    }, []);\n\n    if (types.length === options.length) {\n      // all the literals are primitive, as far as null can be considered primitive\n\n      const uniqueTypes = types.filter((x, i, a) => a.indexOf(x) === i);\n      return {\n        type: uniqueTypes.length > 1 ? uniqueTypes : uniqueTypes[0]!,\n        enum: options.reduce(\n          (acc, x) => {\n            return acc.includes(x._def.value) ? acc : [...acc, x._def.value];\n          },\n          [] as (string | number | bigint | boolean | null)[],\n        ),\n      };\n    }\n  } else if (options.every((x) => x._def.typeName === 'ZodEnum')) {\n    return {\n      type: 'string',\n      enum: options.reduce(\n        (acc: string[], x) => [...acc, ...x._def.values.filter((x: string) => !acc.includes(x))],\n        [],\n      ),\n    };\n  }\n\n  return asAnyOf(def, refs);\n}\n\nconst asAnyOf = (\n  def: ZodUnionDef | ZodDiscriminatedUnionDef<any, any>,\n  refs: Refs,\n): JsonSchema7PrimitiveUnionType | JsonSchema7AnyOfType | undefined => {\n  const anyOf = ((def.options instanceof Map ? Array.from(def.options.values()) : def.options) as any[])\n    .map((x, i) =>\n      parseDef(x._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, 'anyOf', `${i}`],\n      }),\n    )\n    .filter(\n      (x): x is JsonSchema7Type =>\n        !!x && (!refs.strictUnions || (typeof x === 'object' && Object.keys(x).length > 0)),\n    );\n\n  return anyOf.length ? { anyOf } : undefined;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}